
#Область СлужебныйПрограммныйИнтерфейс

// Регистрация тестов
Процедура ИсполняемыеСценарии() Экспорт

	Перем ЮТТесты;
	ЮТТесты = РГПТ_Движок.ЮТТесты();
	
	ЮТТесты
		.ДобавитьТестовыйНабор("ОписаниеОповещения")
			.ДобавитьТест(
				"Тест_ОписаниеОповещения_НеопределеноЕслиДругойТип", 
				"Неопределено, если другой тип")
			.ДобавитьТест(
				"Тест_ОписаниеОповещения_НеопределеноЕслиНеСоответствует", 
				"Неопределено, если структура не соответствует описанию")
			.ДобавитьТест(
				"Тест_ОписаниеОповещения_ОшибкаЕслиПустыеСвойства", 
				"Вызывает исключение, если переданая пустая структура описания")
			.ДобавитьТест(
				"Тест_ОписаниеОповещения_УспехЕслиОписаниеОповещения", 
				"При передачи типа ОписаниеОповещения возвращает его же")
			.ДобавитьТест(
				"Тест_ОписаниеОповещения_УспехЕслиПравильнаяСтруктура", 
				"Возвращает ОписаниеОповещения из структуры")
			
	;

КонецПроцедуры

#Область Тесты

#Область ОписаниеОповещения

Процедура Тест_ОписаниеОповещения_НеопределеноЕслиДругойТип() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Результат = ТестируемыйМодуль.ОписаниеОповещения(1);
	
	ЮТест.ОжидаетЧто(Результат).ЭтоНеопределено();
	
КонецПроцедуры

Процедура Тест_ОписаниеОповещения_НеопределеноЕслиНеСоответствует() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Параметр = РГПТ_Модули.ГлобальныйПоискКлиентСервер().ПустоеОписаниеОповещения();
	Параметр.Удалить("Модуль");
	
	Результат = ТестируемыйМодуль.ОписаниеОповещения(Параметр);
	
	ЮТест.ОжидаетЧто(Результат).ЭтоНеопределено();
	
КонецПроцедуры

Процедура Тест_ОписаниеОповещения_ОшибкаЕслиПустыеСвойства() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Параметр = РГПТ_Модули.ГлобальныйПоискКлиентСервер().ПустоеОписаниеОповещения();
	
	ПараметрыМетода = Новый Массив;
	ПараметрыМетода.Добавить(Параметр);
	
	ЮТест.ОжидаетЧто(ТестируемыйМодуль)
		.Метод("ОписаниеОповещения", ПараметрыМетода)
		.ВыбрасываетИсключение(Неопределено);
	
КонецПроцедуры

Процедура Тест_ОписаниеОповещения_УспехЕслиОписаниеОповещения() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Параметр = Новый ОписаниеОповещения();
	Результат = ТестируемыйМодуль.ОписаниеОповещения(Параметр);
	
	ЮТест.ОжидаетЧто(Результат).Равно(Параметр);
	
КонецПроцедуры

Процедура Тест_ОписаниеОповещения_УспехЕслиПравильнаяСтруктура() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ИмяМетода = "Тест_ОписаниеОповещения_УспехЕслиПравильнаяСтруктура"; 
	ОписаниеОповещения = Новый ОписаниеОповещения(ИмяМетода, ЭтотОбъект, Новый Структура, ИмяМетода, ЭтотОбъект);
	
	СтруктураОписания = РГПТ_Модули.ГлобальныйПоискКлиентСервер().ПустоеОписаниеОповещения();
	ЗаполнитьЗначенияСвойств(СтруктураОписания, ОписаниеОповещения);
	
	Результат = ТестируемыйМодуль.ОписаниеОповещения(СтруктураОписания);
	
	Для Каждого КлючИЗначение Из СтруктураОписания Цикл
		Ключ = КлючИЗначение.Ключ;
		ЮТест.ОжидаетЧто(Результат[Ключ], Ключ)
			.Равно(ОписаниеОповещения[Ключ]);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Тестируемый модуль.
// 
// Возвращаемое значение:
//  ОбщийМодуль
Функция ТестируемыйМодуль()
	
	Возврат РГПТ_Модули.ГлобальныйПоискКлиент();
	
КонецФункции

#КонецОбласти