
#Область СлужебныйПрограммныйИнтерфейс

// Регистрация тестов
Процедура ИсполняемыеСценарии() Экспорт

	Перем ЮТТесты;
	ЮТТесты = РГПТ_Движок.ЮТТесты();
	
	ЮТТесты
	
		//ПользовательскиеНастройки
		.ДобавитьТестовыйНабор("ПредставлениеЗначенияПользовательскойНастройки")
			.ДобавитьТест("Тест_ПредставлениеЗначенияПользовательскойНастройки_Авто", "Значение Авто")
			.ДобавитьТест("Тест_ПредставлениеЗначенияПользовательскойНастройки_Формат", "Форматная строка")
			.ДобавитьТест("Тест_ПредставлениеЗначенияПользовательскойНастройки_ДоступноеЗначение", "Доступное значение")
			
		.ДобавитьТестовыйНабор("ЗначениеПользовательскойНастройкиЕстьВДоступных")
			.ДобавитьТест("Тест_ЗначениеПользовательскойНастройкиЕстьВДоступных_Авто", "Значение Авто")
			.ДобавитьТест("Тест_ЗначениеПользовательскойНастройкиЕстьВДоступных_ДоступноеЗначение", "Доступное значение")
			.ДобавитьТест("Тест_ЗначениеПользовательскойНастройкиЕстьВДоступных_БезОграничений", "Без ограничений")
			
		.ДобавитьТестовыйНабор("ПривестиЗначениеКПользовательскойНастройке")
			.ДобавитьТест("Тест_ПривестиЗначениеКПользовательскойНастройке_Авто", "Значение Авто")
			.ДобавитьТест("Тест_ПривестиЗначениеКПользовательскойНастройке_ДоступноеЗначение", "Когда есть или нет в доступных")
			.ДобавитьТест("Тест_ПривестиЗначениеКПользовательскойНастройке_ПроверкаТипа", "Проверка типа значения")
			
		//Вспомогательные
		.ДобавитьТестовыйНабор("ЗначениеСоответствуетШаблону")
			.ДобавитьТест("Тест_ЗначениеСоответствуетШаблону_ЛожьЕслиНеСтруктура", "Ложь, если НЕ структура")
			.ДобавитьТест("Тест_ЗначениеСоответствуетШаблону_ЛожьЕслиЛишнееСвойство", "Ложь, если в значении лишнее свойство")
			.ДобавитьТест("Тест_ЗначениеСоответствуетШаблону_ЛожьЕслиНедостающееСвойство", "Ложь, если в значении не хватает свойства")
			.ДобавитьТест("Тест_ЗначениеСоответствуетШаблону_ИстинаЕслиПустаяСтруктура", "Истина, если пустая структура")
			.ДобавитьТест("Тест_ЗначениеСоответствуетШаблону_ИстинаЕслиСоответствует", "Истина, если значение соответствует шаблону")
		
	;

КонецПроцедуры

#Область Тесты

#Область ЗначениеСоответствуетШаблону

Процедура Тест_ЗначениеСоответствуетШаблону_ЛожьЕслиНеСтруктура() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Результат = ТестируемыйМодуль.ЗначениеСоответствуетШаблону(1,1);
	
	ЮТест.ОжидаетЧто(Результат).ЭтоЛожь();
	
КонецПроцедуры

Процедура Тест_ЗначениеСоответствуетШаблону_ЛожьЕслиЛишнееСвойство() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Результат = ТестируемыйМодуль.ЗначениеСоответствуетШаблону(
		Новый Структура("С1,С2,С3"), Новый Структура("С1,С2"));
	
	ЮТест.ОжидаетЧто(Результат).ЭтоЛожь();
	
КонецПроцедуры

Процедура Тест_ЗначениеСоответствуетШаблону_ЛожьЕслиНедостающееСвойство() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Результат = ТестируемыйМодуль.ЗначениеСоответствуетШаблону(
		Новый Структура("С1,С2"), Новый Структура("С1,С2,С3"));
	
	ЮТест.ОжидаетЧто(Результат).ЭтоЛожь();
	
КонецПроцедуры

Процедура Тест_ЗначениеСоответствуетШаблону_ИстинаЕслиПустаяСтруктура() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Результат = ТестируемыйМодуль.ЗначениеСоответствуетШаблону(
		Новый Структура, Новый Структура);
	
	ЮТест.ОжидаетЧто(Результат).ЭтоИстина();
	
КонецПроцедуры

Процедура Тест_ЗначениеСоответствуетШаблону_ИстинаЕслиСоответствует() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Результат = ТестируемыйМодуль.ЗначениеСоответствуетШаблону(
		Новый Структура("С1,С2,С3"), Новый Структура("С1,С2,С3"));
	
	ЮТест.ОжидаетЧто(Результат).ЭтоИстина();
	
КонецПроцедуры

#КонецОбласти

#Область ПользовательскиеНастройки

#Область ПредставлениеЗначенияПользовательскойНастройки

Процедура Тест_ПредставлениеЗначенияПользовательскойНастройки_Авто() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ОписаниеНастройки = ТестируемыйМодуль.НовыйОписаниеПользовательскойНастройки();
	ОписаниеНастройки.ДоступноАвто = Истина;
	
	Результат = ТестируемыйМодуль.ПредставлениеЗначенияПользовательскойНастройки(ОписаниеНастройки, Неопределено);
	Ожидается = ТестируемыйМодуль.ПредставлениеЗначенияАвтоПользовательскойНастройки();
	
	ЮТест.ОжидаетЧто(Результат).Равно(Ожидается);
	
КонецПроцедуры

Процедура Тест_ПредставлениеЗначенияПользовательскойНастройки_Формат() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Ожидается = "Откл";
	
	ОписаниеНастройки = ТестируемыйМодуль.НовыйОписаниеПользовательскойНастройки();
	ОписаниеНастройки.ФорматнаяСтрока = СтрШаблон("БЛ=%1;", Ожидается);
	
	Результат = ТестируемыйМодуль.ПредставлениеЗначенияПользовательскойНастройки(ОписаниеНастройки, Ложь);
	
	ЮТест.ОжидаетЧто(Результат).Равно(Ожидается);
	
КонецПроцедуры

Процедура Тест_ПредставлениеЗначенияПользовательскойНастройки_ДоступноеЗначение() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ОписаниеНастройки = ТестируемыйМодуль.НовыйОписаниеПользовательскойНастройки();
	ДоступноеЗначение = ОписаниеНастройки.ДоступныеЗначения.Добавить(Ложь, "Тестовая строка");
	
	Результат = ТестируемыйМодуль.ПредставлениеЗначенияПользовательскойНастройки(
		ОписаниеНастройки, ДоступноеЗначение.Значение);
	
	ЮТест.ОжидаетЧто(Результат).Равно(ДоступноеЗначение.Представление);
	
КонецПроцедуры

#КонецОбласти

#Область ЗначениеПользовательскойНастройкиЕстьВДоступных

Процедура Тест_ЗначениеПользовательскойНастройкиЕстьВДоступных_Авто() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ОписаниеНастройки = ТестируемыйМодуль.НовыйОписаниеПользовательскойНастройки();
	
	ОписаниеНастройки.ДоступноАвто = Истина;
	Результат = ТестируемыйМодуль.ЗначениеПользовательскойНастройкиЕстьВДоступных(ОписаниеНастройки, Неопределено);
	ЮТест.ОжидаетЧто(Результат).ЭтоИстина();
	
	ОписаниеНастройки.ДоступноАвто = Ложь;
	Результат = ТестируемыйМодуль.ЗначениеПользовательскойНастройкиЕстьВДоступных(ОписаниеНастройки, Неопределено);
	ЮТест.ОжидаетЧто(Результат).ЭтоЛожь();
	
КонецПроцедуры

Процедура Тест_ЗначениеПользовательскойНастройкиЕстьВДоступных_ДоступноеЗначение() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ОписаниеНастройки = ТестируемыйМодуль.НовыйОписаниеПользовательскойНастройки();
	ДоступноеЗначение = ОписаниеНастройки.ДоступныеЗначения.Добавить(Новый УникальныйИдентификатор());
	
	Результат = ТестируемыйМодуль.ЗначениеПользовательскойНастройкиЕстьВДоступных(
		ОписаниеНастройки, ДоступноеЗначение.Значение);
	ЮТест.ОжидаетЧто(Результат).ЭтоИстина();
	
	Результат = ТестируемыйМодуль.ЗначениеПользовательскойНастройкиЕстьВДоступных(
		ОписаниеНастройки, Новый УникальныйИдентификатор());
	ЮТест.ОжидаетЧто(Результат).ЭтоЛожь();
	
КонецПроцедуры

Процедура Тест_ЗначениеПользовательскойНастройкиЕстьВДоступных_БезОграничений() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ОписаниеНастройки = ТестируемыйМодуль.НовыйОписаниеПользовательскойНастройки();
	Результат = ТестируемыйМодуль.ЗначениеПользовательскойНастройкиЕстьВДоступных(
		ОписаниеНастройки, Новый УникальныйИдентификатор());
	ЮТест.ОжидаетЧто(Результат).ЭтоИстина();
	
КонецПроцедуры

#КонецОбласти

#Область ПривестиЗначениеКПользовательскойНастройке

Процедура Тест_ПривестиЗначениеКПользовательскойНастройке_Авто() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ОписаниеНастройки = ТестируемыйМодуль.НовыйОписаниеПользовательскойНастройки();
	ОписаниеНастройки.ЗначениеПоУмолчанию = Новый УникальныйИдентификатор();
	
	ПроверяемоеЗначение = Неопределено;
	Значение = ПроверяемоеЗначение;
	Изменено = Ложь;
	
	//Передаем Неопределено и Авто доступно
	ОписаниеНастройки.ДоступноАвто = Истина;
	ТестируемыйМодуль.ПривестиЗначениеКПользовательскойНастройке(Значение, ОписаниеНастройки, Изменено);
	ЮТест.ОжидаетЧто(Изменено).ЭтоЛожь();
	ЮТест.ОжидаетЧто(Значение).Равно(ПроверяемоеЗначение);
	
	//Передаем Неопределено, но Авто НЕ доступно
	ОписаниеНастройки.ДоступноАвто = Ложь;
	ТестируемыйМодуль.ПривестиЗначениеКПользовательскойНастройке(Значение, ОписаниеНастройки, Изменено);
	ЮТест.ОжидаетЧто(Изменено).ЭтоИстина();
	ЮТест.ОжидаетЧто(Значение).Равно(ОписаниеНастройки.ЗначениеПоУмолчанию);
	
КонецПроцедуры

Процедура Тест_ПривестиЗначениеКПользовательскойНастройке_ДоступноеЗначение() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ПроверяемоеЗначение = Новый УникальныйИдентификатор();
	
	ОписаниеНастройки = ТестируемыйМодуль.НовыйОписаниеПользовательскойНастройки();
	ОписаниеНастройки.ЗначениеПоУмолчанию = Новый УникальныйИдентификатор();
	ДоступноеЗначение = ОписаниеНастройки.ДоступныеЗначения.Добавить(ПроверяемоеЗначение);
	
	Значение = ПроверяемоеЗначение;
	Изменено = Ложь;
	
	//Передаем значение, которое ЕСТЬ в доступных
	ТестируемыйМодуль.ПривестиЗначениеКПользовательскойНастройке(Значение, ОписаниеНастройки, Изменено);
	ЮТест.ОжидаетЧто(Изменено).ЭтоЛожь();
	ЮТест.ОжидаетЧто(Значение).Равно(ПроверяемоеЗначение);
	
	//Передаем значение, которого НЕТ в доступных
	ДоступноеЗначение.Значение = Новый УникальныйИдентификатор();
	ТестируемыйМодуль.ПривестиЗначениеКПользовательскойНастройке(Значение, ОписаниеНастройки, Изменено);
	ЮТест.ОжидаетЧто(Изменено).ЭтоИстина();
	ЮТест.ОжидаетЧто(Значение).Равно(ОписаниеНастройки.ЗначениеПоУмолчанию);
	
КонецПроцедуры

Процедура Тест_ПривестиЗначениеКПользовательскойНастройке_ПроверкаТипа() Экспорт

	Перем ЮТест;
	ЮТест = РГПТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ПроверяемоеЗначение = Новый УникальныйИдентификатор();
	
	ОписаниеНастройки = ТестируемыйМодуль.НовыйОписаниеПользовательскойНастройки();
	ОписаниеНастройки.Тип = Новый ОписаниеТипов("УникальныйИдентификатор");
	
	Значение = ПроверяемоеЗначение;
	Изменено = Ложь;
	
	//Передаем значение, которое соответствует типу
	ТестируемыйМодуль.ПривестиЗначениеКПользовательскойНастройке(Значение, ОписаниеНастройки, Изменено);
	ЮТест.ОжидаетЧто(Изменено).ЭтоЛожь();
	ЮТест.ОжидаетЧто(Значение).Равно(ПроверяемоеЗначение);
	
	//Передаем значение, которое НЕ соответствует типу (кастуется к строке)
	ОписаниеНастройки.Тип = Новый ОписаниеТипов("Строка");
	ТестируемыйМодуль.ПривестиЗначениеКПользовательскойНастройке(Значение, ОписаниеНастройки, Изменено);
	ЮТест.ОжидаетЧто(Изменено).ЭтоИстина();
	ЮТест.ОжидаетЧто(Значение).Равно(Строка(ПроверяемоеЗначение));
	
	//Передаем значение, которое НЕ соответствует типу (не может кастоваться)
	Изменено = Ложь;
	Значение = ПроверяемоеЗначение;
	ОписаниеНастройки.Тип = Новый ОписаниеТипов("Число");
	ТестируемыйМодуль.ПривестиЗначениеКПользовательскойНастройке(Значение, ОписаниеНастройки, Изменено);
	ЮТест.ОжидаетЧто(Изменено).ЭтоИстина();
	ЮТест.ОжидаетЧто(Значение).Равно(0);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Тестируемый модуль.
// 
// Возвращаемое значение:
//  ОбщийМодуль
Функция ТестируемыйМодуль()
	
	Возврат РГПТ_Модули.ГлобальныйПоискКлиентСервер();
	
КонецФункции

#КонецОбласти