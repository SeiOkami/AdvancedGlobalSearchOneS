// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

#Область СобытияМодуляПриложения

// Событие модуля приложения "ПриНачалеРаботыСистемы"
// Производим инициализацию параметров поиска.
Процедура ПриНачалеРаботыСистемы() Экспорт

	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();

	Если ЗначениеЗаполнено(ПараметрыПоиска.Описание) Тогда
		ГлобальныйПоиск.УстановитьОписание(ПараметрыПоиска.Описание);
	КонецЕсли;

	Если ЗначениеЗаполнено(ПараметрыПоиска.ПодсказкаВвода) Тогда
		ГлобальныйПоиск.УстановитьПодсказкуВвода(ПараметрыПоиска.ПодсказкаВвода);
	КонецЕсли;

	РГП_ГлобальныйПоискКлиентПереопределяемый.Модуль().ПослеСобытияПриНачалеРаботыСистемы();

КонецПроцедуры

// Событие модуля приложения "ПриГлобальномПоиске"
// Анализируем введенную строку на наличие команд расширенного поиска.
// 
// Параметры:
//  ИзначальнаяСтрокаПоиска - Строка - Строка, введенная пользователем или скриптом в поле глобального поиска
//  ПланПоиска - ПланГлобальногоПоиска - Текущий план выполнения глобального поиска.
Процедура ПриГлобальномПоиске(ИзначальнаяСтрокаПоиска, ПланПоиска) Экспорт

	СтрокаПоиска = СокрЛП(ИзначальнаяСтрокаПоиска);
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	Для Каждого КлючИЗначение Из ПараметрыПоиска.Команды Цикл

		Если Не СтрНачинаетсяС(СтрокаПоиска, КлючИЗначение.Ключ) Или Не КлючИЗначение.Значение.Использование Тогда
			Продолжить;
		КонецЕсли;

		ПланПоиска.Очистить();

		СтрокаПоиска = Сред(СтрокаПоиска, СтрДлина(КлючИЗначение.Ключ) + 1);

		ТекущаяКоманда = КлючИЗначение.Значение; // см. НоваяКомандаРасширенногоПоиска
		КлючИПараметры = Неопределено; // см. КлючКомандыИПараметрыИзЧастиСтрокиПоиска
		
		ЧастиСтрокиПоиска = СтрРазделить(СтрокаПоиска, ТекущаяКоманда.Разделитель, Истина);
		Для ИндексЧастиСтроки = 0 По ЧастиСтрокиПоиска.Количество() - 1 Цикл
			
			ЧастьСтроки = ЧастиСтрокиПоиска[ИндексЧастиСтроки];
			ТекущиеКлючИПараметры = КлючКомандыИПараметрыИзЧастиСтрокиПоиска(ЧастьСтроки);
			
			КлючКоманды = ВРег(ТекущиеКлючИПараметры.Ключ);
			ПодчиненнаяКоманда = ТекущаяКоманда.Команды.Получить(КлючКоманды); // см. НоваяКомандаРасширенногоПоиска
			Если ПодчиненнаяКоманда = Неопределено Или Не ПодчиненнаяКоманда.Использование Тогда
				Прервать;
			Иначе
				ТекущаяКоманда = ПодчиненнаяКоманда;
				КлючИПараметры = ТекущиеКлючИПараметры;
			КонецЕсли;
			
		КонецЦикла;
		
		ПараметрыВыполнения = ПараметрыВыполненияКомандыПоиска(ПараметрыПоиска, 
			ИзначальнаяСтрокаПоиска, ТекущаяКоманда, КлючИПараметры);
		
		ВывестиДанныеКомандыПриГлобальномПоиске(ПланПоиска, ТекущаяКоманда, ПараметрыВыполнения);

	КонецЦикла;

	РГП_ГлобальныйПоискКлиентПереопределяемый.Модуль().
		ПослеСобытияПриГлобальномПоиске(ИзначальнаяСтрокаПоиска, ПланПоиска);

КонецПроцедуры

// Событие модуля приложения "ПриВыбореРезультатаГлобальногоПоиска"
// Когда пользователь выбрал одну из команд, мы программно вводим её полный ключ в поле поиска.
// 
// Параметры:
//  ЭлементРезультата - ЭлементРезультатаГлобальногоПоиска:
//  * Значение - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  СтандартнаяОбработка - Булево
Процедура ПриВыбореРезультатаГлобальногоПоиска(Знач ЭлементРезультата, СтандартнаяОбработка) Экспорт
	
	Если РГП_ГлобальныйПоискКлиентСервер.ЭтоЭлементРезультатаРасширенногоГлобальногоПоиска(ЭлементРезультата) Тогда
		ОбработатьДанныеРезультатаГлобальногоПоиска(ЭлементРезультата.Значение, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

// При выборе действия результата глобального поиска.
// 
// Параметры:
//  ЭлементРезультата - ЭлементРезультатаГлобальногоПоиска
//  Действие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
Процедура ПриВыбореДействияРезультатаГлобальногоПоиска(ЭлементРезультата, Действие) Экспорт
	
	Если РГП_ГлобальныйПоискКлиентСервер.ЭтоЭлементРезультатаРасширенногоГлобальногоПоиска(ЭлементРезультата) Тогда
		ОбработатьДанныеРезультатаГлобальногоПоиска(Действие);
	КонецЕсли;
	
КонецПроцедуры

// Обработка перехода по навигационной ссылке.
// 
// Параметры:
//  ДанныеПереходаПоНавигационнойСсылке - ДанныеПереходаПоНавигационнойСсылке
//  СтандартнаяОбработка - Булево
Процедура ОбработкаПереходаПоНавигационнойСсылке(
	ДанныеПереходаПоНавигационнойСсылке, СтандартнаяОбработка) Экспорт
	
	//@skip-check unknown-method-property - Ошибка платформы
	//@skip-check bsl-legacy-check-dynamic-feature-access - баг платформы
	НавигационнаяСсылка = ДанныеПереходаПоНавигационнойСсылке.ОтносительнаяНавигационнаяСсылка;
	
	СтрокаПоиска = РГП_ГлобальныйПоискКлиентСервер.СтрокаПоискаИзНавигационнойСсылки(НавигационнаяСсылка);
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		СтандартнаяОбработка = Ложь;
		ГлобальныйПоиск.НачатьПоиск(СтрокаПоиска);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиГлобальногоПоиска

// Добавить элемент плана поиска.
// 
// Параметры:
//  ПланПоиска - ПланГлобальногоПоиска
//  ИмяМетода - Строка
//  ИмяМодуля - Строка
//  НаСервере - Булево
//  Фоново - Булево
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ДобавитьЭлементПланаПоиска(ПланПоиска, ИмяМетода, ИмяМодуля, НаСервере, Фоново, ПараметрыВыполнения) Экспорт
	
	ПланПоиска.Добавить(ИмяМетода, ИмяМодуля, НаСервере, Фоново, ПланПоиска.Количество(), ПараметрыВыполнения);
	
КонецПроцедуры

// Добавить элемент плана поиска (на клиенте).
// 
// Параметры:
//  ПланПоиска - ПланГлобальногоПоиска
//  ИмяМетода - Строка
//  ИмяМодуля - Строка
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ДобавитьЭлементПланаПоискаНаКлиенте(ПланПоиска, ИмяМетода, ИмяМодуля, ПараметрыВыполнения) Экспорт
	
	ДобавитьЭлементПланаПоиска(ПланПоиска, ИмяМетода, ИмяМодуля, Ложь, Ложь, ПараметрыВыполнения);
	
КонецПроцедуры

// Добавить элемент плана поиска (текущего модуля).
// 
// Параметры:
//  ПланПоиска - ПланГлобальногоПоиска
//  ИмяМетода - Строка
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ДобавитьЭлементПланаПоискаТекущегоМодуля(ПланПоиска, ИмяМетода, ПараметрыВыполнения) Экспорт
	
	ДобавитьЭлементПланаПоискаНаКлиенте(ПланПоиска, ИмяМетода, ИмяТекущегоМодуля(), ПараметрыВыполнения);
	
КонецПроцедуры

Процедура ДобавитьЭлементПланаСтандартныхКоманд(ПланПоиска, 
	ТекущаяКоманда, ПараметрыВыполненияКоманды) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыполненияКоманды.СтандартныеКоманды) Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьЭлементПланаПоискаТекущегоМодуля(ПланПоиска, 
		"ОбработчикСтандартныхКомандПоиска", ПараметрыВыполненияКоманды);
	
КонецПроцедуры

// Выполняет переданные стандартные обработчики
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
Процедура ОбработчикСтандартныхКомандПоиска(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	ГруппироватьСтандартныеКоманды = ПараметрыВыполнения.ПользовательскиеНастройки.ГруппироватьСтандартныеКоманды;
	Если ГруппироватьСтандартныеКоманды Тогда
		ДобавитьОбщийЭлементРезультатаСтандартныхКоманд(РезультатыПоиска, ПараметрыВыполнения);
	КонецЕсли;
	
	Для Каждого ИмяКоманды Из ПараметрыВыполнения.СтандартныеКоманды Цикл
		
		Если ИмяКоманды = "ВводСтроки" Тогда
			ОбработчикСтандартнойКомандыПоиска_ВводСтроки(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения);
		ИначеЕсли ИмяКоманды = "Обновить" Тогда
			ОбработчикСтандартнойКомандыПоиска_Обновить(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения);
		ИначеЕсли ИмяКоманды = "Назад" Тогда
			ОбработчикСтандартнойКомандыПоиска_Назад(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения);
		ИначеЕсли ИмяКоманды = "Параметры" Тогда
			ОбработчикСтандартнойКомандыПоиска_Параметры(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения);
		ИначеЕсли ИмяКоманды = "Настройки" Тогда
			ОбработчикСтандартнойКомандыПоиска_Настройки(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения);
		ИначеЕсли ИмяКоманды = "Избранное" Тогда
			ОбработчикСтандартнойКомандыПоиска_Избранное(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения);
		Иначе
			ТекстИсключения = ФразаИнтерфейса("Не найден обработчик стандартной команды");
			ТекстИсключения = СтрШаблон("%1 %2", ТекстИсключения, ИмяКоманды);
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
	КонецЦикла;

	Если ГруппироватьСтандартныеКоманды Тогда
		РГП_ГлобальныйПоискКлиентСервер.ПеренестиДействияРезультатовПоискаПоСтрокам(РезультатыПоиска);
	КонецЕсли;

КонецПроцедуры

// Добавить общий элемент результата стандартных команд.
// 
// Параметры:
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
Процедура ДобавитьОбщийЭлементРезультатаСтандартныхКоманд(РезультатыПоиска, ПараметрыВыполнения) Экспорт
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	КомандаПоиска = ПараметрыПоиска.ПолныеКлючиКоманд.Получить(ПараметрыВыполнения.ПолныйКлюч);
	Если КомандаПоиска = Неопределено Тогда
		Картинка = БиблиотекаКартинок.КомандаМенюФункций;
	Иначе
		Картинка = КомандаПоиска.Картинка;
	КонецЕсли;
	
	ПустоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеПустое();
	Представление = СтрШаблон("%1: %2", ПараметрыВыполнения.Представление, ПараметрыВыполнения.СтрокаПоиска);
	Представление = РГП_ГлобальныйПоискКлиентСервер.СтрокаЗаголовком(Представление);
	
	ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
		ПустоеДействие, Представление, Картинка);
	
	РезультатыПоиска.Добавить(ЭлементРезультата);
	
КонецПроцедуры

// Метод плана глобального поиска для вывода подчиненных команд пользователю
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
Процедура ОбработчикСтандартнойКомандыПоиска_ВывестиКоманды(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	ОписаниеКоманды = ПараметрыРасширенногоГлобальногоПоиска().ПолныеКлючиКоманд.Получить(ПараметрыВыполнения.ПолныйКлюч);
	Для Каждого ПодчиненнаяКоманда Из ОписаниеКоманды.ПорядокКоманд Цикл // см. НоваяКомандаРасширенногоПоиска

		Если Не ПодчиненнаяКоманда.Использование Или Не ПодчиненнаяКоманда.ОтображатьВМеню Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПодчиненнаяКоманда.ВыполняемоеДействие = Неопределено Тогда
			ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеПереходаНаПодчиненнуюКоманду(
				ПараметрыВыполнения, ПодчиненнаяКоманда.Ключ);
		Иначе
			ВыполняемоеДействие = ПодчиненнаяКоманда.ВыполняемоеДействие;
		КонецЕсли;
		
		Представление = ?(ПустаяСтрока(ПодчиненнаяКоманда.Представление), 
			ПодчиненнаяКоманда.Ключ, ПодчиненнаяКоманда.Представление);
		
		ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
			ВыполняемоеДействие, Представление, ПодчиненнаяКоманда.Картинка, ПодчиненнаяКоманда.Описание);
		РезультатыПоиска.Добавить(ЭлементРезультата);

	КонецЦикла;

	РГП_ГлобальныйПоискКлиентПереопределяемый.Модуль().ПослеВыводаПодчиненныхКомандГлобальногоПоиска(
		СтрокаПоиска, РезультатыПоиска, ОписаниеКоманды);

КонецПроцедуры

// Метод плана глобального поиска стандартной команды ввода строки
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ОбработчикСтандартнойКомандыПоиска_ВводСтроки(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	РГП_ГлобальныйПоискКлиентСервер.ДобавитьЭлементРезультатаСтандартнойКоманды_ВводСтроки(
		РезультатыПоиска, ПараметрыВыполнения);

КонецПроцедуры

// Метод плана глобального поиска стандартной команды обновления результатов поиска
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ОбработчикСтандартнойКомандыПоиска_Обновить(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	РГП_ГлобальныйПоискКлиентСервер.ДобавитьЭлементРезультатаСтандартнойКоманды_Обновить(
		РезультатыПоиска, ПараметрыВыполнения);

КонецПроцедуры

// Метод плана глобального поиска стандартной команды возвращения на команду вверх
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ОбработчикСтандартнойКомандыПоиска_Назад(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	РГП_ГлобальныйПоискКлиентСервер.ДобавитьЭлементРезультатаСтандартнойКоманды_Назад(
		РезультатыПоиска, ПараметрыВыполнения);

КонецПроцедуры

// Метод плана глобального поиска стандартной команды вывода параметров
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ОбработчикСтандартнойКомандыПоиска_Параметры(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	Если НЕ ЗначениеЗаполнено(ПараметрыВыполнения.ПараметрыКоманды) Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	КомандаПоиска   = ПараметрыПоиска.ПолныеКлючиКоманд.Получить(ПараметрыВыполнения.ПолныйКлюч);
	
	ЧастиПредставления = Новый Массив; // Массив из Строка
	
	Для Каждого КлючИЗначение Из ПараметрыВыполнения.ПараметрыКоманды Цикл
		
		ОписаниеПараметра = ОписаниеПараметраКомандыПоиска(ПараметрыПоиска, КомандаПоиска, КлючИЗначение.Ключ);
		Если ОписаниеПараметра = Неопределено ИЛИ НЕ ОписаниеПараметра.Отображать Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОписаниеПараметра.МетодПредставления = Неопределено Тогда
			ПредставлениеЗначения = Строка(КлючИЗначение.Значение);
		Иначе
			ПараметрыПредставления = РГП_ГлобальныйПоискКлиентСервер.ПараметрыМетодаПредставленияПараметра(
				КлючИЗначение.Ключ, КлючИЗначение.Значение, ПараметрыВыполнения);
			МетодПредставления = ОписаниеОповещения(ОписаниеПараметра.МетодПредставления);
			ВыполнитьОбработкуОповещения(МетодПредставления, ПараметрыПредставления);
			ПредставлениеЗначения = ПараметрыПредставления.Представление;
		КонецЕсли;
		
		ЧастьПредставления = Новый ФорматированнаяСтрока(
			Символы.ПС, Символы.Таб, Символы.Таб,
			ОписаниеПараметра.Представление,
			": ",
			ПредставлениеЗначения);
		ЧастиПредставления.Добавить(ЧастьПредставления);
		
	КонецЦикла;
	
	ЧастиПредставления.Добавить(Символы.ПС);
	
	Если НЕ ПараметрыВыполнения.ПользовательскиеНастройки.ГруппироватьСтандартныеКоманды Тогда
		Представление = ФразаИнтерфейса("Параметры");
		Представление = РГП_ГлобальныйПоискКлиентСервер.СтрокаЗаголовком(Представление + ":");
		ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
			Неопределено, Представление, БиблиотекаКартинок.Параметры);
		РезультатыПоиска.Добавить(ЭлементРезультата);
	КонецЕсли;
	
	ЭлементРезультата = РезультатыПоиска[РезультатыПоиска.Количество() - 1];
	ЧастиПредставления.Вставить(0, ЭлементРезультата.Представление);
	
	ЭлементРезультата.Представление = Новый ФорматированнаяСтрока(ЧастиПредставления);

КонецПроцедуры

// Метод плана глобального поиска стандартной команды вывода пользовательских настроек
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ОбработчикСтандартнойКомандыПоиска_Настройки(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	КомандаПоиска   = ПараметрыПоиска.ПолныеКлючиКоманд.Получить(ПараметрыВыполнения.ПолныйКлюч);
	
	Если НЕ ЗначениеЗаполнено(КомандаПоиска.ОписанияНастроек) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыКоманды = Новый Структура;
	ВставитьПолныйКлючКомандыВПередаваемыеПараметры(ПараметрыКоманды, КомандаПоиска);
	
	КлючНастройки = ФразаИнтерфейса("Настройки");
	
	ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеПереходаНаКоманду(
		СтрШаблон("\%1\", КлючНастройки), ПараметрыКоманды);
	
	ПредставлениеКоманды = РГП_ГлобальныйПоискКлиентСервер.СтрокаЗаголовком(КлючНастройки);
	ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
		ВыполняемоеДействие, ПредставлениеКоманды, БиблиотекаКартинок.Настройка);
		
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьЭлементРезультатаСтандартнойКоманды(
		РезультатыПоиска, ПараметрыВыполнения, ЭлементРезультата);

КонецПроцедуры

// Метод плана глобального поиска стандартной команды Избранное
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ОбработчикСтандартнойКомандыПоиска_Избранное(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	ЭлементИзбранного = РГП_ГлобальныйПоискКлиентСервер.ЭлементИзбранного(СтрокаПоиска);
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	СуществующийЭлемент = ПараметрыПоиска.ИзбранноеПоиск.Получить(ЭлементИзбранного.КлючПоиска);
	Если СуществующийЭлемент = Неопределено Тогда
		Картинка = БиблиотекаКартинок.Избранное;
		ЭлементИзбранного.Представление = ПредставлениеКомандыДляИзбранного(ПараметрыВыполнения);
	Иначе
		Картинка = БиблиотекаКартинок.ДобавитьВИзбранное;
		ЗаполнитьЗначенияСвойств(ЭлементИзбранного, СуществующийЭлемент);
	КонецЕсли;
	
	ДействиеИзбранного = ВыполняемоеДействиеОткрытияФормыЭлементаИзбранного(ЭлементИзбранного, ПараметрыВыполнения);
	
	Представление = ФразаИнтерфейса("Избранное");
	Представление = РГП_ГлобальныйПоискКлиентСервер.СтрокаЗаголовком(Представление);
	ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
		ДействиеИзбранного, Представление, Картинка);
	
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьЭлементРезультатаСтандартнойКоманды(
		РезультатыПоиска, ПараметрыВыполнения, ЭлементРезультата);

КонецПроцедуры

// Метод плана глобального для поиска по открытым окнам
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ГлобальныйПоискПоОткрытымОкнам(Знач СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	ОбщиеПараметры = ОбщиеПараметрыВыполненияГлобальногоПоискаПоОткрытымФормам(
		СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения);
	
	ГлобальныйПоискПоОткрытымФормам_ВывестиОткрытыеФормы(ОбщиеПараметры);

КонецПроцедуры

// Метод плана глобального для поиска по открытым окнам
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
Процедура ГлобальныйПоискПоЭлементамФормы(Знач СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт

	Если НЕ ЗначениеЗаполнено(ПараметрыВыполнения.ПараметрыКоманды) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ОбщиеПараметрыВыполненияПоискаПоЭлементамФормы(ПараметрыВыполнения);
	Если ОбщиеПараметры.Форма = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОбщиеПараметры.ВыводВсехЭлементов Тогда
		ГлобальныйПоискПоЭлементамФормы_НайтиПодходящиеЭлементы(ОбщиеПараметры);
	КонецЕсли;
	
	ГлобальныйПоискПоЭлементамФормы_ДобавитьРезультаты(ОбщиеПараметры, РезультатыПоиска);
	
КонецПроцедуры

// Глобальный поиск настройки.
// 
// Параметры:
//  ПолнаяСтрокаПоиска - Строка - Полная строка, введенная в поле поиска (включая команды)
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
Процедура ГлобальныйПоискНастройки(ПолнаяСтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт
	
	КлючНастройки = Неопределено;
	ПараметрыВыполнения.ПараметрыКоманды.Свойство(КлючПараметраКомандыРедактораНастройки(), КлючНастройки);
	КлючНастройки = ?(КлючНастройки = Неопределено, "", КлючНастройки);
	
	КомандаИзПараметров = КомандаПоискаИзПередаваемыхПараметровКоманды(ПараметрыВыполнения);
	
	ГлобальныйПоискНастройки_КомандыОчистки(РезультатыПоиска, ПараметрыВыполнения, КомандаИзПараметров);
	
	Если ЗначениеЗаполнено(КлючНастройки) Тогда
	
		ГлобальныйПоискНастройки_ВывестиЗначения(РезультатыПоиска, ПараметрыВыполнения, КомандаИзПараметров);
	
	Иначе
		
		Если НЕ ЗначениеЗаполнено(КомандаИзПараметров) Тогда
			ГлобальныйПоискНастройки_ВывестиКоманды(РезультатыПоиска, ПараметрыВыполнения);
		КонецЕсли;
		
		ГлобальныйПоискНастройки_ВывестиНастройки(РезультатыПоиска, ПараметрыВыполнения, КомандаИзПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

// Глобальный поиск Избранное.
// 
// Параметры:
//  ПолнаяСтрокаПоиска - Строка - Полная строка, введенная в поле поиска (включая команды)
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
Процедура ГлобальныйПоискИзбранное(ПолнаяСтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения) Экспорт
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	Для Каждого ЭлементИзбранного Из ПараметрыПоиска.ИзбранноеПорядок Цикл
		
		ОписаниеОповещения = РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения(
			"ОбработчикВыполнитьГлобальныйПоискПоСтроке", ИмяТекущегоМодуля(), ЭлементИзбранного.ПолнаяСтрокаПоиска);
		ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОписанияОповещения(ОписаниеОповещения);
		
		ДействиеИзменить = ВыполняемоеДействиеОткрытияФормыЭлементаИзбранного(ЭлементИзбранного, ПараметрыВыполнения);
		
		ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
			ВыполняемоеДействие, ЭлементИзбранного.Представление, БиблиотекаКартинок.Избранное);
		
		ПредставлениеДействия = ФразаИнтерфейса("Изменить");
		ЭлементРезультата.Действия.Добавить(ДействиеИзменить, "✏ " + ПредставлениеДействия);
		
		РезультатыПоиска.Добавить(ЭлементРезультата);
		
	КонецЦикла;
	
КонецПроцедуры

// Метод плана глобального для вычисления выражения.
//
// Отключение проверок:
//	BSLLS:LineLength-off - баг BSL LS
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  ДополнительныеПараметры - см. РГП_ГлобальныйПоискКлиентСервер.ДополнительныеПараметрыВыполненияКомандыВычисленияВыражения
//
Асинх Процедура ГлобальныйПоискВычислитьВыражение(ВыполняемоеДействие, ДополнительныеПараметры) Экспорт

	ТекстВыражения = ФразаИнтерфейса("Введите выражение");
	ТекстВыражения = Ждать ВвестиСтрокуАсинх(ДополнительныеПараметры.НачальноеВыражение, ТекстВыражения);
	
	Если НЕ ЗначениеЗаполнено(ТекстВыражения) Тогда
		Возврат;
	КонецЕсли;
	
	Результат = РГП_ГлобальныйПоискКлиентСервер.ВычислитьВыражение(
		ТекстВыражения, ДополнительныеПараметры.НаСервере);
	
	Если Результат.Успешно Тогда
		Если Результат.НаСервере Тогда
			Попытка
				Значение = ПолучитьИзВременногоХранилища(Строка(Результат.Результат)); 
			Исключение
				Значение = Результат.Представление;
			КонецПопытки;
		Иначе
			Значение = Результат.Результат;
		КонецЕсли;
	Иначе
		Значение = Результат.ОписаниеОшибки;
	КонецЕсли;
	
	Результат.Результат = Значение;
	
	КлючЗаписи = СокрЛП(ВРег(ТекстВыражения));
	
	// @skip-check unknown-method-property - Баг ЕДТ
	Попытка
		РГП_ГлобальныйПоискВызовСервера.ДобавитьЗаписьИсторииВыполненияКоманды(
			ДополнительныеПараметры.ПолныйКлючКоманды, КлючЗаписи, Результат, Истина);
	Исключение
		Результат.Результат = Результат.Представление;
		РГП_ГлобальныйПоискВызовСервера.ДобавитьЗаписьИсторииВыполненияКоманды(
			ДополнительныеПараметры.ПолныйКлючКоманды, КлючЗаписи, Результат, Истина);
	КонецПопытки;
	
	Обещание = ОткрытьЗначениеАсинх(Значение);
	
	Если РГП_ГлобальныйПоискКлиентСервер.ЭтоПростойТип(ТипЗнч(Значение)) Тогда
	
		// Баг платформы. Только "обычные" типы можно ожидать, остальные обещания никогда не выполнятся
		Ждать(Обещание);
		
		// Если обновлять поиск при открытой форме, то она может свернуться. Лучше вообще не обновлять
		ГлобальныйПоиск.НачатьПоиск(ПолныйКлючКомандыВычисленияВыражений());
		
	КонецЕсли;

КонецПроцедуры

// Глобальный поиск сбросить настройки.
// 
// Параметры:
//  ВыполняемоеДействие - см. НоваяКомандаРасширенногоПоиска
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ПараметрыВыполненияКомандыОчисткиНастроек
Процедура ГлобальныйПоискСброситьНастройки(ВыполняемоеДействие, ПараметрыВыполнения) Экспорт
	
	РГП_ГлобальныйПоискВызовСервера.ОбработчикКомандыОчисткиНастроек(ПараметрыВыполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРезультатаГлобальногоПоиска

// Показать поле ввода строки поиска
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  ПараметрыДействия - см. РГП_ГлобальныйПоискКлиентСервер.ПараметрыДействияВводаСтроки
Процедура ОтобразитьВводСтроки(ВыполняемоеДействие, ПараметрыДействия) Экспорт
	
	ОписаниеОкончанияВвода = Новый ОписаниеОповещения("ПоместитьСтрокуВКонецПоиска", ЭтотОбъект, ПараметрыДействия);
	ПоказатьВводСтроки(ОписаниеОкончанияВвода, ПараметрыДействия.НачальнаяСтрока, ПараметрыДействия.Представление);
	
КонецПроцедуры

// Поместить введенную строку в конец строки поиска
// 
// Параметры:
//  Строка - Строка, Неопределено - Введенная строка
//  ПараметрыДействия - см. РГП_ГлобальныйПоискКлиентСервер.ПараметрыДействияВводаСтроки
Процедура ПоместитьСтрокуВКонецПоиска(Строка, ПараметрыДействия) Экспорт
	
	Если ТипЗнч(Строка) = Тип("Строка") Тогда
		
		ГлобальныйПоиск.НачатьПоиск(ПараметрыДействия.СтрокаПоиска + Строка);
		
	КонецЕсли;
	
КонецПроцедуры

// Активировать форму.
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  ДополнительныеПараметры - Произвольный
Процедура АктивироватьФорму(ВыполняемоеДействие, ДополнительныеПараметры) Экспорт
	
	Форма = Неопределено; // ФормаКлиентскогоПриложения
	Если ВыполняемоеДействие.ДополнительныеПараметры.Свойство("Форма", Форма) Тогда
		Форма.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

// Закрыть форму.
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  ДополнительныеПараметры - Произвольный
Процедура ЗакрытьФорму(ВыполняемоеДействие, ДополнительныеПараметры) Экспорт
	
	Форма = Неопределено; // ФормаКлиентскогоПриложения
	Если ВыполняемоеДействие.ДополнительныеПараметры.Свойство("Форма", Форма) Тогда
		Форма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

// Активировать элемент формы
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  ДополнительныеПараметры - Произвольный
Процедура АктивироватьЭлементФормы(ВыполняемоеДействие, ДополнительныеПараметры) Экспорт
	
	Форма   = Неопределено; // ФормаКлиентскогоПриложения
	Элемент = Неопределено; // ПолеВвода
	Если ВыполняемоеДействие.ДополнительныеПараметры.Свойство("Форма", Форма)
		И ВыполняемоеДействие.ДополнительныеПараметры.Свойство("Элемент", Элемент) Тогда
		
		Форма.ТекущийЭлемент = Элемент; // @skip-check statement-type-change
		
	КонецЕсли;
	
КонецПроцедуры

// Выделить элемент формы
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  ДополнительныеПараметры - Произвольный
Процедура ВыделитьЭлементФормы(ВыполняемоеДействие, ДополнительныеПараметры) Экспорт
	
	Форма   = Неопределено; // ФормаКлиентскогоПриложения
	Элемент = Неопределено; // ПолеВвода
	Если ВыполняемоеДействие.ДополнительныеПараметры.Свойство("Форма", Форма)
		И ВыполняемоеДействие.ДополнительныеПараметры.Свойство("Элемент", Элемент) Тогда
		
		НовыеСвойства = Новый Структура;
		НовыеСвойства.Вставить("ЦветРамки", РГП_ГлобальныйПоискКлиентСервер.ЦветОсобогоТекста());
		НовыеСвойства.Вставить("ЦветФона" , РГП_ГлобальныйПоискКлиентСервер.ЦветФонаВыделения());
		
		ЗаполнитьЗначенияСвойств(Элемент, НовыеСвойства);
		
		Форма.ТекущийЭлемент = Элемент; // @skip-check statement-type-change
		
	КонецЕсли;
	
КонецПроцедуры

// Отобразить ввод значения.
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеВводаЗначения
//  ПараметрыВвода - см. РГП_ГлобальныйПоискКлиентСервер.ПараметрыВыполняемогоДействияВводаЗначения
Процедура ОтобразитьВводЗначения(ВыполняемоеДействие, ПараметрыВвода) Экспорт
	
	ОписаниеОповещения = ОписаниеОповещения(ПараметрыВвода.ОписаниеОповещенияОЗавершении);
	
	ДополнительныеПараметры = ОписаниеОповещения.ДополнительныеПараметры;
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		ДополнительныеПараметры.Вставить("ВыполняемоеДействие", ВыполняемоеДействие);
	КонецЕсли;
	
	ПоказатьВводЗначения(ОписаниеОповещения, ПараметрыВвода.Значение, ПараметрыВвода.Подсказка, ПараметрыВвода.Тип);
	
КонецПроцедуры

// Параметры обработчика выбора нового значения пользовательской настройки.
// 
// Возвращаемое значение:
//  Структура - :
// * НовоеЗначение - Неопределено, Произвольный - Новое значение настройки
// * КлючНастройки - Строка - Ключ настройки
// * КлючКоманды - Строка - Ключ команды настройки (если нет, то общая настройка)
Функция ПараметрыОбработчикаВыбораНовогоЗначенияПользовательскойНастройки() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("НовоеЗначение", Неопределено);
	Результат.Вставить("КлючНастройки", "");
	Результат.Вставить("КлючКоманды"  , "");
	
	Возврат Результат;
	
КонецФункции

// Выделить элемент формы
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  Параметры - см. ПараметрыОбработчикаВыбораНовогоЗначенияПользовательскойНастройки
Процедура ОбработчикВыбораНовогоЗначенияПользовательскойНастройки(ВыполняемоеДействие, Параметры) Экспорт
	
	ИзменитьПользовательскуюНастройку(Параметры);
	
КонецПроцедуры

// Обработчик ввода нового значения пользовательской настройки.
// 
// Параметры:
//  НовоеЗначение - Произвольный
//  Параметры - см. ПараметрыОбработчикаВыбораНовогоЗначенияПользовательскойНастройки
Процедура ОбработчикВводаНовогоЗначенияПользовательскойНастройки(НовоеЗначение, Параметры) Экспорт
	
	Параметры = Новый Структура(Новый ФиксированнаяСтруктура(Параметры));
	Параметры.НовоеЗначение = НовоеЗначение;
	ИзменитьПользовательскуюНастройку(Параметры);
	
КонецПроцедуры

// Изменить пользовательскую настройку.
// 
// Параметры:
//  Параметры - см. ПараметрыОбработчикаВыбораНовогоЗначенияПользовательскойНастройки
Процедура ИзменитьПользовательскуюНастройку(Параметры) Экспорт
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	ПользовательскиеНастройки = ПараметрыПоиска.ПользовательскиеНастройки;
	
	Если ЗначениеЗаполнено(Параметры.КлючКоманды) Тогда
		КомандаПоиска = ПараметрыПоиска.ПолныеКлючиКоманд.Получить(Параметры.КлючКоманды);
		Если КомандаПоиска = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ТекущиеНастройки = ПользовательскиеНастройки.НастройкиКоманд.Получить(Параметры.КлючКоманды);
		Если ТекущиеНастройки = Неопределено Тогда
			ТекущиеНастройки = Новый Структура;
			ПользовательскиеНастройки.НастройкиКоманд.Вставить(КомандаПоиска.ПолныйКлюч, ТекущиеНастройки);
		КонецЕсли;
		ОписанияНастроек = КомандаПоиска.ОписанияНастроек;
	Иначе
		КомандаПоиска = Неопределено;
		ТекущиеНастройки = ПользовательскиеНастройки.ОбщиеНастройки;
		ОписанияНастроек = ПараметрыПоиска.ОписанияПользовательскихНастроек;
	КонецЕсли;
	
	ОписаниеНастройки = РГП_ГлобальныйПоискКлиентСервер.ОписаниеПользовательскойНастройки(
		ОписанияНастроек, Параметры.КлючНастройки);
	
	РГП_ГлобальныйПоискКлиентСервер.ПривестиЗначениеКПользовательскойНастройке(
		Параметры.НовоеЗначение, ОписаниеНастройки);
	
	ТекущееЗначение = Неопределено;
	ЗначениеПреставлениеПользовательскойНастройки(ПараметрыПоиска, 
		Параметры.КлючНастройки, ТекущееЗначение, "", КомандаПоиска);
	Если ТекущееЗначение = Параметры.НовоеЗначение Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеНастройки.Вставить(Параметры.КлючНастройки, Параметры.НовоеЗначение);
	РГП_ГлобальныйПоискВызовСервера.ЗаписатьЗначенияПользовательскихНастроек(ПараметрыПоиска.ПользовательскиеНастройки);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

// Перейти на страницу.
// 
// Параметры:
//  Страница - Число
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеПереходаНаКоманду
Процедура ПерейтиНаСтраницу(Страница, ВыполняемоеДействие) Экспорт
	
	КлючПараметра = РГП_ГлобальныйПоискКлиентСервер.КлючПараметраКоманды_Страница();
	ВыполняемоеДействие.ПараметрыПоиска.Вставить(КлючПараметра, Страница);
	ОбработатьДанныеРезультатаГлобальногоПоиска(ВыполняемоеДействие);
	
КонецПроцедуры

// Параметры:
//  СтараяСтрокаПоиска - Строка
//  НовыеДанные - см. РГП_ГлобальныйПоискКлиентСервер.ЭлементИзбранного
Процедура ИзменитьВИзбранном(СтараяСтрокаПоиска = "", НовыеДанные = Неопределено) Экспорт
	
	УдаляемыйЭлемент = РГП_ГлобальныйПоискКлиентСервер.ЭлементИзбранного(СтараяСтрокаПоиска);
	
	ИндексУдаленного = УдалитьЭлементИзбранногоИзПараметровПоискаИВернутьИндекс(УдаляемыйЭлемент);

	Если НовыеДанные <> Неопределено Тогда
		ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
		ПараметрыПоиска.ИзбранноеПоиск.Вставить(НовыеДанные.КлючПоиска, НовыеДанные);
		Если ИндексУдаленного = Неопределено Тогда
			ИндексУдаленного = 0;
		КонецЕсли;
		ПараметрыПоиска.ИзбранноеПорядок.Вставить(ИндексУдаленного, НовыеДанные);
	КонецЕсли;
	
	РГП_ГлобальныйПоискВызовСервера.ИзменитьИзбранное(УдаляемыйЭлемент.НавигационнаяСсылка, НовыеДанные);
	
	ОбновитьПовторноИспользуемыеЗначения();
	ОбновитьИнтерфейс();
	
КонецПроцедуры

// Параметры:
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
// 
// Возвращаемое значение:
//  Строка
Функция ПредставлениеКомандыДляИзбранного(ПараметрыВыполнения) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыВыполнения.СтрокаПоиска) Тогда
		Представление = СтрШаблон("%1 (%2)", ПараметрыВыполнения.Представление, ПараметрыВыполнения.СтрокаПоиска);
	Иначе
		Представление = ПараметрыВыполнения.Представление;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#Область МетодыРаботыСРасширеннымПоиском

// Основное меню расширенного глобального поиска.
// 
// Параметры:
//  Параметры - см. ПараметрыРасширенногоГлобальногоПоиска
// 
// Возвращаемое значение:
//  см. НоваяКомандаРасширенногоПоиска
Функция ОсновноеМенюРасширенногоГлобальногоПоиска(Параметры) Экспорт
	
	КлючОсновногоМеню = КлючОсновногоМенюРасширенногоГлобальногоПоиска();
	ОсновнаяКоманда = Параметры.Команды.Получить(КлючОсновногоМеню); // см. НоваяКомандаРасширенногоПоиска
	Возврат ОсновнаяКоманда;
	
КонецФункции

// Ключ основного меню расширенного глобального поиска.
// 
// Возвращаемое значение:
//  Строка
Функция КлючОсновногоМенюРасширенногоГлобальногоПоиска() Экспорт
	
	КлючОсновногоМеню = РГП_ГлобальныйПоискКлиентПереопределяемый.КлючОсновногоМенюРасширенногоГлобальногоПоиска();
	Если ПустаяСтрока(КлючОсновногоМеню) Тогда
		КлючОсновногоМеню = "\";
	КонецЕсли;
	
	Возврат КлючОсновногоМеню;
	
КонецФункции

// Параметры выполнения команды поиска.
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  СтрокаПоиска - Строка
//  Команда - см. НоваяКомандаРасширенногоПоиска
//  КлючИПараметры - см. КлючКомандыИПараметрыИзЧастиСтрокиПоиска
// 
// Возвращаемое значение:
//  см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
Функция ПараметрыВыполненияКомандыПоиска(ПараметрыПоиска, СтрокаПоиска, Команда, КлючИПараметры) Экспорт
	
	ПараметрыВыполнения = РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска();
	ЗаполнитьЗначенияСвойств(ПараметрыВыполнения, Команда);
	
	РГП_ГлобальныйПоискКлиентСервер.ЗаполнитьСтруктуруРекурсивно(
		ПараметрыВыполнения.ПользовательскиеНастройки, Команда);
	
	РГП_ГлобальныйПоискКлиентСервер.ЗаполнитьСтруктуруРекурсивно(
		ПараметрыВыполнения.ПользовательскиеНастройки, 
		ПараметрыПоиска.ПользовательскиеНастройки.ОбщиеНастройки, Истина);
	
	НастройкиКоманды = ПараметрыПоиска.ПользовательскиеНастройки.НастройкиКоманд.Получить(Команда.ПолныйКлюч);
	Если ЗначениеЗаполнено(НастройкиКоманды) Тогда
		РГП_ГлобальныйПоискКлиентСервер.ЗаполнитьСтруктуруРекурсивно(
			ПараметрыВыполнения.ПользовательскиеНастройки, НастройкиКоманды, , Истина);
	КонецЕсли;
	
	РодительКоманды = Команда.Родитель; // см. НоваяКомандаРасширенногоПоиска 
	Если РодительКоманды = Неопределено Тогда
		ПараметрыВыполнения.ПолныйКлючРодителя = ПараметрыВыполнения.Разделитель;
	Иначе
		ПараметрыВыполнения.ПолныйКлючРодителя = РодительКоманды.ПолныйКлюч;
	КонецЕсли;
	
	Если КлючИПараметры = Неопределено Тогда
		
		ПараметрыВыполнения.ПолныйКлючСПараметрами = ПараметрыВыполнения.ПолныйКлюч;
		
	Иначе
		
		КоординатаПоследнегоРазделителя = СтрНайти(ПараметрыВыполнения.ПолныйКлюч, 
			ПараметрыВыполнения.Разделитель, НаправлениеПоиска.СКонца);
		
		ПолныйКлючБезПоследнегоРазделителя = Лев(ПараметрыВыполнения.ПолныйКлюч, КоординатаПоследнегоРазделителя - 1);
		
		ПараметрыВыполнения.ПолныйКлючСПараметрами = ПолныйКлючБезПоследнегоРазделителя
			+ КлючИПараметры.СтрокаПараметров + ПараметрыВыполнения.Разделитель;
			
		ЗаполнитьПараметрыВыполненияКомандыИзПараметровСтрокиПоиска(
			ПараметрыПоиска, Команда, ПараметрыВыполнения, КлючИПараметры.Параметры);
			
	КонецЕсли;
	
	ПараметрыВыполнения.ПолнаяСтрокаПоиска = СтрокаПоиска;
	ПараметрыВыполнения.СтрокаПоиска = СтрокаПоискаЗаВычетомКоманды(ПараметрыВыполнения, СтрокаПоиска);
	ПараметрыВыполнения.СтрокаПоискаВрег = ВРег(ПараметрыВыполнения.СтрокаПоиска);
	ПараметрыВыполнения.СловаПоиска = СтрРазделить(ПараметрыВыполнения.СтрокаПоискаВрег, " .\/", Ложь);
	
	Возврат ПараметрыВыполнения;
	
КонецФункции

// Обработчик оповещения выполненения действия.
// 
// Параметры:
//  НеиспользуемыйПараметр - Произвольный - Нужен только для поддержки синтаксиса описания оповещения
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
Процедура ОбработчикОповещенияВыполненияДействия(НеиспользуемыйПараметр, ВыполняемоеДействие) Экспорт
	
	ОбработатьДанныеРезультатаГлобальногоПоиска(ВыполняемоеДействие);
	
КонецПроцедуры

// Обработать данные результата глобального поиска.
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  СтандартнаяОбработка - Булево
Процедура ОбработатьДанныеРезультатаГлобальногоПоиска(ВыполняемоеДействие, СтандартнаяОбработка = Истина) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыполняемоеДействие) = Тип("Структура") Тогда
		
		Если ЗначениеЗаполнено(ВыполняемоеДействие.ВыполняемыеДействия) Тогда
			
			Для Каждого ПодчиненноеДействие Из ВыполняемоеДействие.ВыполняемыеДействия Цикл
				//@skip-check invocation-parameter-type-intersect - баг ЕДТ
				ОбработатьДанныеРезультатаГлобальногоПоиска(ПодчиненноеДействие);
			КонецЦикла;
			
		Иначе
			
			ОбработатьДанныеРезультатаГлобальногоПоиска_ОписаниеОповещения(ВыполняемоеДействие);
			
			ОбработатьДанныеРезультатаГлобальногоПоиска_ОткрываемоеЗначение(ВыполняемоеДействие);
			
			ОбработатьДанныеРезультатаГлобальногоПоиска_ПутьПерехода(ВыполняемоеДействие);
			
			ОбработатьДанныеРезультатаГлобальногоПоиска_ОткрываемаяФорма(ВыполняемоеДействие);
			
		КонецЕсли;
	
	Иначе
		
		ПоказатьОткрываемоеЗначение(ВыполняемоеДействие);
				
	КонецЕсли;

КонецПроцедуры

// Показать открываемое значение.
// 
// Параметры:
//  ОткрываемоеЗначение - Строка - Навигационная ссылка
//						- Произвольный - Открываемое значение
Процедура ПоказатьОткрываемоеЗначение(ОткрываемоеЗначение) Экспорт
	
	Если ЭтоНавигационнаяСсылка(ОткрываемоеЗначение) Тогда
		ПерейтиПоНавигационнойСсылке(ОткрываемоеЗначение);
	Иначе
		ПоказатьЗначение(Неопределено, ОткрываемоеЗначение);
	КонецЕсли;
	
КонецПроцедуры

// Это навигационная ссылка.
// 
// Параметры:
//  Значение - Строка
//           - Произвольный
// 
// Возвращаемое значение:
//  Булево - Это навигационная ссылка
Функция ЭтоНавигационнаяСсылка(Значение) Экспорт
	
	Возврат ТипЗнч(Значение) = Тип("Строка") 
		И (СтрНачинаетсяС(Значение, "e1cib/") 
			ИЛИ СтрНачинаетсяС(Значение, "http"));
	
КонецФункции

// Параметры расширенного глобального поиска
// Именять содержимое можно только в переропределяемом событии "ПослеЗаполненияПараметровРасширенногоГлобальногоПоиска"
// 
// Параметры:
//  ИзКэша - Булево - Выбирать ли закэшированную структуру
//  	Не рекомендуется Передавать значение Ложь, так как все внутренние механизмы используют закэшированное значение
// 
// Возвращаемое значение:
//  Структура - Параметры расширенного глобального поиска:
// * КлючВидаПоискаВыбораКоманды - Строка - Ключевая строка, передается в вид поиска результата при выборе пользователем команды
// * Команды - см. КоллекцияКомандПараметровРасширенногоГлобальногоПоиска
// * ПолныеКлючиКоманд - см. КоллекцияВсехКомандПараметровРасширенногоГлобальногоПоиска
// * Описание - Строка - Описание глобального поиска. Если заполнено, устанавливается при начале работы системы
// * ПодсказкаВвода - Строка - Подсказка ввода глобального поиска. Если заполнено, устанавливается при начале работы системы
// * СтандартныеПараметрыКоманд - см. РГП_ГлобальныйПоискКлиентСервер.НоваяКоллекцияПараметровКоманды
// * РазделительМеждуКомандойИПараметрами - Строка - Символ-разделитель ключа команды и ее параметров
// * РазделительМеждуПараметрамиКоманды - Строка - Символ-разделитель между параметрами команды
// * РазделительМеждуКлючомИЗначениемПараметраКоманды - Строка - Символ-разделитель между ключем команды и его значением
// * ШрифтЗаголовковМеню - Неопределено, Шрифт - Шрифт заголовков меню
// * ШрифтДопИнформации - Неопределено, Шрифт - Шрифт доп. информации мелкого текста
// * ЦветЗаголовковМеню - Неопределено, Цвет - Цвет заголовков меню
// * ЦветОсобогоТекста - Неопределено, Цвет - Цвет особого текста
// * ЦветФонаВыделения - Неопределено, Цвет - Цвет фона выделения
// * ДоступноИзбранное - Булево - Пользователю доступна работа с избранным
// * ИзбранноеПоиск - см. РГП_ГлобальныйПоискКлиентСервер.КоллекцияЭлементовИзбранного
// * ИзбранноеПорядок - см. РГП_ГлобальныйПоискКлиентСервер.УпорядоченнаяКоллекцияЭлементовИзбранного
// * ОписаниеРасширения - см. ОписаниеРасширения
// * КэшированныеДанные - см. КоллекцияКэшированныхДанныхПараметровПоиска
// * ПользовательскиеНастройки - см. РГП_ГлобальныйПоискКлиентСервер.НоваяКоллекцияПользовательскихНастроек
// * ОписанияПользовательскихНастроек - см. РГП_ГлобальныйПоискКлиентСервер.ОписанияДоступныхПользовательскихНастроек
// * ДополнительныеПараметры - Структура
Функция ПараметрыРасширенногоГлобальногоПоиска(ИзКэша = Истина) Экспорт

	Если ИзКэша Тогда
		//@skip-check constructor-function-return-section - Баг ЕДТ
		Возврат РГП_ГлобальныйПоискКлиентПовтИсп.ПараметрыРасширенногоГлобальногоПоиска();
	КонецЕсли;

	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("КлючВидаПоискаВыбораКоманды", "Команда расширенного глобального поиска");
	ПараметрыПоиска.Вставить("Команды", КоллекцияКомандПараметровРасширенногоГлобальногоПоиска());
	ПараметрыПоиска.Вставить("ПолныеКлючиКоманд", КоллекцияВсехКомандПараметровРасширенногоГлобальногоПоиска());
	ПараметрыПоиска.Вставить("Описание", "");
	ПараметрыПоиска.Вставить("ПодсказкаВвода", "");
	
	ПараметрыПоиска.Вставить("СтандартныеПараметрыКоманд", РГП_ГлобальныйПоискКлиентСервер.НоваяКоллекцияПараметровКоманды());
	ПараметрыПоиска.Вставить("РазделительМеждуКомандойИПараметрами", "?");
	ПараметрыПоиска.Вставить("РазделительМеждуПараметрамиКоманды", "&");
	ПараметрыПоиска.Вставить("РазделительМеждуКлючомИЗначениемПараметраКоманды", "=");
	
	ПараметрыПоиска.Вставить("ШрифтЗаголовковМеню", Неопределено);
	ПараметрыПоиска.Вставить("ШрифтДопИнформации", Неопределено);
	ПараметрыПоиска.Вставить("ЦветЗаголовковМеню", Неопределено);
	ПараметрыПоиска.Вставить("ЦветОсобогоТекста", Неопределено);
	ПараметрыПоиска.Вставить("ЦветФонаВыделения", Неопределено);
	
	ПараметрыПоиска.Вставить("ДоступноИзбранное", Ложь);
	ПараметрыПоиска.Вставить("ИзбранноеПоиск", РГП_ГлобальныйПоискКлиентСервер.КоллекцияЭлементовИзбранного());
	ПараметрыПоиска.Вставить("ИзбранноеПорядок", 
		РГП_ГлобальныйПоискКлиентСервер.УпорядоченнаяКоллекцияЭлементовИзбранного());
	
	ПараметрыПоиска.Вставить("ОписаниеРасширения", ОписаниеРасширения());
	ПараметрыПоиска.Вставить("КэшированныеДанные", КоллекцияКэшированныхДанныхПараметровПоиска());
	ПараметрыПоиска.Вставить("ПользовательскиеНастройки", 
		РГП_ГлобальныйПоискКлиентСервер.НоваяКоллекцияПользовательскихНастроек());
	ПараметрыПоиска.Вставить("ОписанияПользовательскихНастроек", 
		РГП_ГлобальныйПоискКлиентСервер.ОписанияДоступныхПользовательскихНастроек());
	ПараметрыПоиска.Вставить("ДополнительныеПараметры", Новый Структура);
	
	ЗаполнитьСтандартныеПараметрыКоманд(ПараметрыПоиска);
	
	РГП_ГлобальныйПоискВызовСервера.ПередЗаполнениемПараметровРасширенногоГлобальногоПоиска(ПараметрыПоиска);

	ЗаполнитьСтандартныеКомандыРасширенногоГлобальногоПоиска(ПараметрыПоиска);

	ОбработатьЗначенияПользовательскихНастроекКоманд(ПараметрыПоиска);
	
	РГП_ГлобальныйПоискКлиентПереопределяемый.Модуль().ПослеЗаполненияПараметровРасширенногоГлобальногоПоиска(
		ПараметрыПоиска);

	Возврат ПараметрыПоиска;

КонецФункции

// Новая команда расширенного поиска.
// Данным методом можно создать свою команду расширенного поиска
// 
// Параметры:
//  ПараметрыВыполнения - см. ПараметрыРасширенногоГлобальногоПоиска
//  Ключ - Строка - Короткий ключ команды. Нужен для идентификации команды в контексте родителя
//  Родитель - Неопределено
//  		 - см. НоваяКомандаРасширенногоПоиска
//  ПорядокРодителя - Неопределено, Число - Порядок команды в родителе
// 
// Возвращаемое значение:
//  Структура - Новая команда расширенного поиска:
// * Ключ - Строка - Короткий ключ команды
// * ПолныйКлюч - Строка - Полный ключ команды по формату <ПолныйКлючРодителя> + <Ключ> + <Разделитель>
// * Родитель - Неопределено - Команда верхнего уровня. В таком случае Ключ команды = Разделитель
// 			  - см. НоваяКомандаРасширенногоПоиска
// * Разделитель - Строка - Разделитель команды. Используется ключ команды верхнего уровня.
// * ВозможнаСтрокаПоиска - Булево - Если установлено в Ложь, то команда не может содержать строку поиска и при возврате Назад она будет очищена
// * ВозможныПараметры - Булево - Если установлено в Истина, то строка поиска (после полного ключа) дополнительно разбивается на разделитель
// 							Например, "\ПолныйКлючКоманды\Параметр\СтрокаПоиска". Наследуется от родителя
// * Команды - см. КоллекцияКомандПараметровРасширенногоГлобальногоПоиска
// * ПриПереходеНазадОчищатьСтрокуПоиска - Булево - Стоит ли при переходе "назад" очищать строку поиска
// * ПриПереходеНазадОчищатьПараметры - Булево - Стоит ли при переходе "назад" очищать параметры
// * ПорядокКоманд - см. УпорядоченнаяКоллекцияКомандРасширенногоГлобальногоПоиска
// * Представление - Строка - Строка, выводимая пользователю
// * Описание - Строка - Строка, выводимая пользователю в качестве описания
// * Картинка - Картинка - Картинка, выводимая пользователю
//            - Неопределено
// * Использование - Булево - Если установить Ложь, то команда будет игнорироваться
// * ОтображатьВМеню - Булево - Если установить Ложь, то команда не будет видна в меню, но будет выполняться при ручном вводе
// * СтандартныеКоманды - Массив из Строка - Массив стандартных вспомогательных команд в начале списка результата, см. РГП_ГлобальныйПоискКлиентСервер.СтандартныеКоманды
// * ГруппироватьСтандартныеКоманды - Булево - Требуется ли группировать стандартные команды в одном пункте меню
// * СгруппированнаяСтандартнаяКоманда - ЭлементРезультатаГлобальногоПоиска, Неопределено - Технический параметр, который используется, если ГруппироватьСтандартныеКоманды = Истина
// * ПланПоиска - Массив из см. ЭлементПланаГлобальногоПоискаКоманды - Методы, который необходимо добавить в план поиска
// * ВыполняемоеДействие - Неопределено - Что выполнится при нажатии на команду. Если не заполнено, то переход по полному пути
// 						 - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
// * Параметры - см. РГП_ГлобальныйПоискКлиентСервер.НоваяКоллекцияПараметровКоманды
// * ОписанияНастроек - см. РГП_ГлобальныйПоискКлиентСервер.НоваяКоллекцияОписанийДоступныхПользовательскихНастроек
// * ДополнительныеПараметры - Структура из КлючИЗначение - Параметры, копируемые в ДополнительныеПараметры выполняемого метода команды:
// ** Ключ - Строка
// ** Значение - Произвольный
Функция НоваяКомандаРасширенногоПоиска(ПараметрыВыполнения, Ключ, 
	Родитель = Неопределено, Знач ПорядокРодителя = Неопределено) Экспорт

	КорневаяКоманда = (Родитель = Неопределено);

	Команда = Новый Структура;
	
	// Структура команды
	Команда.Вставить("Ключ", Ключ);
	Команда.Вставить("ПолныйКлюч", "");
	Команда.Вставить("Родитель", Родитель);
	Команда.Вставить("Разделитель", "");
	Команда.Вставить("ВозможнаСтрокаПоиска", Истина);
	Команда.Вставить("Команды", КоллекцияКомандПараметровРасширенногоГлобальногоПоиска());
	Команда.Вставить("ПриПереходеНазадОчищатьСтрокуПоиска", Ложь);
	Команда.Вставить("ПриПереходеНазадОчищатьПараметры", Ложь);
	Команда.Вставить("ПорядокКоманд", УпорядоченнаяКоллекцияКомандРасширенногоГлобальногоПоиска());
	
	// Отображение
	Команда.Вставить("Представление", Ключ);
	Команда.Вставить("Описание", "");
	Команда.Вставить("Картинка", Неопределено);
	
	// Доступность
	Команда.Вставить("Использование", Истина);
	Команда.Вставить("ОтображатьВМеню", Истина);
	
	// Выполняемое действие
	Команда.Вставить("ПланПоиска", Новый Массив); // Массив из см. ЭлементПланаГлобальногоПоискаКоманды
	Команда.Вставить("ВыполняемоеДействие", Неопределено);

	// Параметры команды
	Команда.Вставить("Параметры", РГП_ГлобальныйПоискКлиентСервер.НоваяКоллекцияПараметровКоманды());

	// Дополнительные пользовательские настройки
	Команда.Вставить("ОписанияНастроек", 
		РГП_ГлобальныйПоискКлиентСервер.НоваяКоллекцияОписанийДоступныхПользовательскихНастроек());
	
	// Дополнительные параметры
	Команда.Вставить("ДополнительныеПараметры", Новый Структура);

	СтандартныеКоманды = РГП_ГлобальныйПоискКлиентСервер.СтандартныеКоманды();
	ИспользуемыеСтандартныеКоманды = Новый Массив; // Массив из Строка
	 
	// Заполнение из родителя
	Если КорневаяКоманда Тогда
		
		Команда.Разделитель = Ключ;
		Команда.ПолныйКлюч  = Ключ;
		КоллекцияКоманды = ПараметрыВыполнения.Команды;
		
	Иначе
		
		Команда.Разделитель = Родитель.Разделитель;
		Команда.ПолныйКлюч  = СтрШаблон("%1%2%3", Родитель.ПолныйКлюч, Ключ, Команда.Разделитель);
		
		ПорядокРодителя = ?(ПорядокРодителя = Неопределено, Родитель.ПорядокКоманд.Количество(), ПорядокРодителя);
		//@skip-check typed-value-adding-to-untyped-collection - Баг ЕДТ
		Родитель.ПорядокКоманд.Вставить(ПорядокРодителя, Команда);
		КоллекцияКоманды = Родитель.Команды;
		
		Для Каждого КлючИЗначение Из СтандартныеКоманды Цикл
			ИспользуемыеСтандартныеКоманды.Добавить(Строка(КлючИЗначение.Значение));
		КонецЦикла;
		
	КонецЕсли;
	
	// Стандартные команды
	Команда.Вставить("СтандартныеКоманды", ИспользуемыеСтандартныеКоманды);
	Команда.Вставить("ГруппироватьСтандартныеКоманды", Истина);

	// Добавляем в иерархию и кэши
	КоллекцияКоманды.Вставить(ВРег(Ключ), Команда);
	ПараметрыВыполнения.ПолныеКлючиКоманд.Вставить(Команда.ПолныйКлюч, Команда);

	Возврат Команда; // @skip-check constructor-function-return-section - баг ЕДТ

КонецФункции

// Исключить стандартную команду из команды поиска.
// 
// Параметры:
//  КомандаПоиска - см. НоваяКомандаРасширенногоПоиска
//  СтандартнаяКоманда - Строка - см. РГП_ГлобальныйПоискКлиентСервер.СтандартныеКоманды
Процедура ИсключитьСтандартнуюКомандуИзКомандыПоиска(КомандаПоиска, СтандартнаяКоманда) Экспорт
	
	ИндексЭлемента = КомандаПоиска.СтандартныеКоманды.Найти(СтандартнаяКоманда);
	Если ИндексЭлемента <> Неопределено Тогда
		КомандаПоиска.СтандартныеКоманды.Удалить(ИндексЭлемента);
	КонецЕсли;
	
КонецПроцедуры

// Элемент плана глобального поиска команды.
// 
// Параметры:
//  ИмяПроцедуры - Строка
//  Модуль - Строка
//  НаСервере - Булево
//  Фоновый - Булево
//  Порядок - Число
// 
// Возвращаемое значение:
//  Структура - Элемент плана глобального поиска команды:
// * ИмяПроцедуры - см. ЭлементПланаГлобальногоПоискаКоманды.ИмяПроцедуры
// * Модуль - см. ЭлементПланаГлобальногоПоискаКоманды.Модуль
// * НаСервере - см. ЭлементПланаГлобальногоПоискаКоманды.НаСервере
// * Фоновый - см. ЭлементПланаГлобальногоПоискаКоманды.Фоновый
// * Порядок - см. ЭлементПланаГлобальногоПоискаКоманды.Порядок
Функция ЭлементПланаГлобальногоПоискаКоманды(ИмяПроцедуры, Модуль, НаСервере = Ложь, Фоновый = Ложь, Порядок = 0) Экспорт

	Результат = Новый Структура;
	Результат.Вставить("ИмяПроцедуры", ИмяПроцедуры);
	Результат.Вставить("Модуль", Модуль);
	Результат.Вставить("НаСервере", НаСервере);
	Результат.Вставить("Фоновый", Фоновый);
	Результат.Вставить("Порядок", Порядок);

	Возврат Результат;
	
КонецФункции

// Описание оповещения.
// 
// Параметры:
//  ДанныеОписания - Неопределено
//                 - ОписаниеОповещения
//                 - см. РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения
// 
// Возвращаемое значение:
//  - ОписаниеОповещения
//  - Неопределено
Функция ОписаниеОповещения(Знач ДанныеОписания) Экспорт

	Если ТипЗнч(ДанныеОписания) = Тип("ОписаниеОповещения") Тогда

		ОписаниеОповещения = ДанныеОписания;

	ИначеЕсли РГП_ГлобальныйПоискКлиентСервер.ЗначениеСоответствуетШаблону(
		ДанныеОписания, РГП_ГлобальныйПоискКлиентСервер.ПустоеОписаниеОповещения()) Тогда

		ОбщийМодульМетода = ОбщийМодуль(ДанныеОписания.Модуль);
		
		Если ЗначениеЗаполнено(ДанныеОписания.ИмяПроцедурыОбработкиОшибки) Тогда
			
			ОбщийМодульОбработкиОшибки = ОбщийМодуль(ДанныеОписания.МодульОбработкиОшибки);
			
			ОписаниеОповещения = Новый ОписаниеОповещения(
				ДанныеОписания.ИмяПроцедуры, ОбщийМодульМетода, ДанныеОписания.ДополнительныеПараметры, 
				ДанныеОписания.ИмяПроцедурыОбработкиОшибки, ОбщийМодульОбработкиОшибки);
			
		Иначе
			
			ОписаниеОповещения = Новый ОписаниеОповещения(
				ДанныеОписания.ИмяПроцедуры, ОбщийМодульМетода, ДанныеОписания.ДополнительныеПараметры);
			
		КонецЕсли;		

	Иначе

		ОписаниеОповещения = Неопределено;

	КонецЕсли;

	Возврат ОписаниеОповещения;

КонецФункции

// Строка поиска за вычетом команды.
// 
// Параметры:
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
//  СтрокаПоиска - Строка
// 
// Возвращаемое значение:
//  Строка
Функция СтрокаПоискаЗаВычетомКоманды(ПараметрыВыполнения, СтрокаПоиска) Экспорт
	
	Возврат СокрЛП(Сред(СтрокаПоиска, СтрДлина(ПараметрыВыполнения.ПолныйКлючСПараметрами) + 1));
	
КонецФункции

#КонецОбласти

#Область ВстроенныеКомандыРасширенногоПоиска

// Описание команды поиска метаданных.
// 
// Параметры:
//  Параметры - см. ПараметрыРасширенногоГлобальногоПоиска
// 
// Возвращаемое значение:
//  см. НоваяКомандаРасширенногоПоиска
Функция ОписаниеКомандыПоискаПоМетаданным(Параметры) Экспорт
	
	КлючКоманды  = КлючКомандыПоискаПоМетаданным();
	Результат    = ОписаниеКомандыОсновногоМенюПоКлючу(Параметры, КлючКоманды);
	Возврат Результат;
	
КонецФункции

// Описание команды поиска метаданных.
// 
// Параметры:
//  Параметры - см. ПараметрыРасширенногоГлобальногоПоиска
// 
// Возвращаемое значение:
//  см. НоваяКомандаРасширенногоПоиска
Функция ОписаниеКомандыПоискаПоФормам(Параметры) Экспорт
	
	КлючКоманды  = КлючКомандыПоискаПоФормам();
	Результат    = ОписаниеКомандыОсновногоМенюПоКлючу(Параметры, КлючКоманды);
	Возврат Результат;
	
КонецФункции

// Описание команды основного меню по ключу.
// 
// Параметры:
//  Параметры - см. ПараметрыРасширенногоГлобальногоПоиска
//  КлючКоманды - Строка
// 
// Возвращаемое значение:
//  см. НоваяКомандаРасширенногоПоиска
Функция ОписаниеКомандыОсновногоМенюПоКлючу(Параметры, КлючКоманды) Экспорт
	
	ОсновноеМеню = ОсновноеМенюРасширенногоГлобальногоПоиска(Параметры);
	Результат    = ОсновноеМеню.Команды.Получить(ВРег(КлючКоманды)); // см. НоваяКомандаРасширенногоПоиска
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ПараметрыКоманд

// Ключ команды и параметры из части строки поиска.
// 
// Параметры:
//  ЧастьСтрокиПоиска - Строка
// 
// Возвращаемое значение:
//  Структура:
//  * Ключ - Строка - Ключ команды
//  * Параметры - Структура - Параметры в строке
//  * СтрокаПараметров - Строка - Часть строки, содержащая параметры
Функция КлючКомандыИПараметрыИзЧастиСтрокиПоиска(ЧастьСтрокиПоиска) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Ключ", "");
	Результат.Вставить("Параметры", Новый Структура);
	Результат.Вставить("СтрокаПараметров", "");
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	
	РазделительКлючаИПараметров = ПараметрыПоиска.РазделительМеждуКомандойИПараметрами;
	КоординатаПараметров = СтрНайти(ЧастьСтрокиПоиска, РазделительКлючаИПараметров);
	
	Если КоординатаПараметров = 0 Тогда
		
		Результат.Ключ = ЧастьСтрокиПоиска;
		
	Иначе
		
		Результат.Ключ = Лев(ЧастьСтрокиПоиска, КоординатаПараметров - 1);
		Результат.СтрокаПараметров = Сред(ЧастьСтрокиПоиска, КоординатаПараметров);
		
		СтрокаПараметров = Сред(Результат.СтрокаПараметров, 1 + СтрДлина(РазделительКлючаИПараметров));
		
		РазделительПараметров = ПараметрыПоиска.РазделительМеждуПараметрамиКоманды;
		РазделительЗначений = ПараметрыПоиска.РазделительМеждуКлючомИЗначениемПараметраКоманды;
		ПараметрыИЗначения = СтрРазделить(СтрокаПараметров, РазделительПараметров);
		Для Каждого ПараметрИЗначение Из ПараметрыИЗначения Цикл
			
			КлючПараметра = "";
			ЗначениеПараметра = "";

			КоординатаЗначенияПараметра = СтрНайти(ПараметрИЗначение, РазделительЗначений);
			Если КоординатаЗначенияПараметра = 0 Тогда
				КлючПараметра = ПараметрИЗначение;
			Иначе
				КлючПараметра = Лев(ПараметрИЗначение, КоординатаЗначенияПараметра - 1);
				ЗначениеПараметра = Сред(ПараметрИЗначение, КоординатаЗначенияПараметра + СтрДлина(РазделительЗначений));
			КонецЕсли;

			Попытка
				Результат.Параметры.Вставить(КлючПараметра, ЗначениеПараметра);
			Исключение
				Продолжить; // Возможно это просто строка поиска
			КонецПопытки;

		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Строка параметров команды поиска.
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  Команда - см. НоваяКомандаРасширенногоПоиска
//  Параметры - Структура
// 
// Возвращаемое значение:
//  Строка
Функция СтрокаПараметровКомандыПоиска(ПараметрыПоиска, Команда, Параметры) Экспорт
	
	РазделительМеждуКлючомИЗначением = ПараметрыПоиска.РазделительМеждуКлючомИЗначениемПараметраКоманды;
	
	ЧастиСтрокиПараметров = Новый Массив; // Массив из Строка
	
	Для Каждого КлючИЗначение Из Параметры Цикл
		
		КлючПараметра = КлючИЗначение.Ключ;
		Значение = КлючИЗначение.Значение;
		
		ОписаниеПараметра = ОписаниеПараметраКомандыПоиска(ПараметрыПоиска, Команда, КлючПараметра);
		Если ОписаниеПараметра <> Неопределено Тогда
			
			ЗначениеСтрокой = Строка(Значение);
			КлючИЗначениеСтрокой = СтрШаблон("%1%2%3", 
				КлючПараметра, РазделительМеждуКлючомИЗначением, ЗначениеСтрокой);
			
			ЧастиСтрокиПараметров.Добавить(КлючИЗначениеСтрокой);

		КонецЕсли;		
		
	КонецЦикла;
	
	Возврат СтрСоединить(ЧастиСтрокиПараметров, ПараметрыПоиска.РазделительМеждуПараметрамиКоманды);
	
КонецФункции

// Заполнить параметры выполнения команды из параметров строки поиска.
// 
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  Команда - см. НоваяКомандаРасширенногоПоиска
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
//  ПараметрыИзСтроки - Структура
Процедура ЗаполнитьПараметрыВыполненияКомандыИзПараметровСтрокиПоиска(
	ПараметрыПоиска, Команда, ПараметрыВыполнения, ПараметрыИзСтроки) Экспорт
	
	Для Каждого КлючИЗначение Из ПараметрыИзСтроки Цикл
		
		КлючПараметра = КлючИЗначение.Ключ;
		ЗначениеСтрокой = КлючИЗначение.Значение; // Строка
		
		ОписаниеПараметра = ОписаниеПараметраКомандыПоиска(ПараметрыПоиска, Команда, КлючПараметра);
		Если ОписаниеПараметра <> Неопределено Тогда
			
			ЗначениеПараметра = РГП_ГлобальныйПоискКлиентСервер.ЗначениеИзСтроки(
				ОписаниеПараметра.Тип, ЗначениеСтрокой);
			ПараметрыВыполнения.ПараметрыКоманды.Вставить(КлючПараметра, ЗначениеПараметра);

		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

// Описание параметра команды поиска.
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  Команда - см. НоваяКомандаРасширенногоПоиска
//  КлючПараметра - Строка
// 
// Возвращаемое значение:
//  см. РГП_ГлобальныйПоискКлиентСервер.ОписаниеПараметраКоманды
Функция ОписаниеПараметраКомандыПоиска(ПараметрыПоиска, Команда, КлючПараметра) Экспорт
	
	ОписаниеПараметра = Неопределено; // см. РГП_ГлобальныйПоискКлиентСервер.ОписаниеПараметраКоманды
	
	ПараметрыПоиска.СтандартныеПараметрыКоманд.Свойство(КлючПараметра, ОписаниеПараметра);
	Если ОписаниеПараметра = Неопределено Тогда
		Команда.Параметры.Свойство(КлючПараметра, ОписаниеПараметра);
	КонецЕсли;
	
	//@skip-check constructor-function-return-section - Баг ЕДТ - нельзя описать Неопределено + см.
	Возврат ОписаниеПараметра;
	
КонецФункции

// Заполнить представление параметра команды форма.
// 
// Параметры:
//  ПараметрыПредставления - см. РГП_ГлобальныйПоискКлиентСервер.ПараметрыМетодаПредставленияПараметра
//  ДополнительныеПараметры - Структура
Процедура ЗаполнитьПредставлениеПараметраКоманды_Форма(ПараметрыПредставления, ДополнительныеПараметры) Экспорт
	
	Окна = ПолучитьОкна();
	Для Каждого Окно Из Окна Цикл
		
		Для Каждого Форма Из Окно.Содержимое Цикл
			
			Если ТипЗнч(Форма) = Тип("ФормаКлиентскогоПриложения") 
				И Форма.УникальныйИдентификатор = ПараметрыПредставления.Значение Тогда
				
				ПараметрыПредставления.Представление = ?(ПустаяСтрока(Форма.Заголовок), 
					Форма.Окно.Заголовок, Форма.Заголовок);
					
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПараметрыКоманд

// Заполнить стандратные параметры команд.
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
Процедура ЗаполнитьСтандартныеПараметрыКоманд(ПараметрыПоиска)
	
	ЗаполнитьСтандартныеПараметрыКоманд_ТекущаяСтраница(ПараметрыПоиска);
	ЗаполнитьСтандартныеПараметрыКоманд_Тип(ПараметрыПоиска);
	
КонецПроцедуры

// Заполнить стандратные параметры команд - Текущая страница.
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
Процедура ЗаполнитьСтандартныеПараметрыКоманд_ТекущаяСтраница(ПараметрыПоиска)
	
	ОписаниеПараметра = РГП_ГлобальныйПоискКлиентСервер.ОписаниеПараметраКоманды_Страница();
	
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьДоступныйПараметрКоманды(
		ПараметрыПоиска.СтандартныеПараметрыКоманд, ОписаниеПараметра);
	
КонецПроцедуры

// Заполнить стандратные параметры команд - Тип.
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
Процедура ЗаполнитьСтандартныеПараметрыКоманд_Тип(ПараметрыПоиска)
	
	ОписаниеПараметра = РГП_ГлобальныйПоискКлиентСервер.ОписаниеПараметраКоманды_Тип();
	
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьДоступныйПараметрКоманды(
		ПараметрыПоиска.СтандартныеПараметрыКоманд, ОписаниеПараметра);
	
КонецПроцедуры

// Вставить полный ключ команды в передаваемые параметры.
// 
// Параметры:
//  ПередаваемыеПараметры - Структура
//  КомандаПоиска - см. НоваяКомандаРасширенногоПоиска
Процедура ВставитьПолныйКлючКомандыВПередаваемыеПараметры(ПередаваемыеПараметры, КомандаПоиска)
	
	КлючПараметраНастроек = РГП_ГлобальныйПоискКлиентСервер.КлючПараметраКоманды_Настройки_Команда();
	КлючКомандыВПараметры = ПолныйКлючКомандыДляПередачиВПараметры(КомандаПоиска);
	
	ПередаваемыеПараметры.Вставить(КлючПараметраНастроек, КлючКомандыВПараметры);
	
КонецПроцедуры

// Полный ключ команды для передачи в параметры.
// 
// Параметры:
//  КомандаПоиска - см. НоваяКомандаРасширенногоПоиска
// 
// Возвращаемое значение:
//  Строка
Функция ПолныйКлючКомандыДляПередачиВПараметры(КомандаПоиска)
	
	Заменитель = ЗаменительРазделителяКлючаКомандыДляПередачиВПараметры();
	Возврат СтрЗаменить(КомандаПоиска.ПолныйКлюч, КомандаПоиска.Разделитель, Заменитель);
	
КонецФункции

// Заменитель разделителя ключа команды для передачи в параметры.
// 
// Возвращаемое значение:
//  Строка
Функция ЗаменительРазделителяКлючаКомандыДляПередачиВПараметры()
	
	Возврат "-";
	
КонецФункции

// Команда поиска из передаваемых параметров команды.
// 
// Параметры:
//  ПараметрыВыполнения - См. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
// 
// Возвращаемое значение:
//  см. НоваяКомандаРасширенногоПоиска
Функция КомандаПоискаИзПередаваемыхПараметровКоманды(ПараметрыВыполнения)
	
	КлючПараметраКоманды = РГП_ГлобальныйПоискКлиентСервер.КлючПараметраКоманды_Настройки_Команда();
	КлючКомандыИзПараметров = Неопределено; // Строка
	ПараметрыВыполнения.ПараметрыКоманды.Свойство(КлючПараметраКоманды, КлючКомандыИзПараметров);
	
	Если ЗначениеЗаполнено(КлючКомандыИзПараметров) Тогда
		Заменитель = ЗаменительРазделителяКлючаКомандыДляПередачиВПараметры();
		ПолныйКлюч = СтрЗаменить(КлючКомандыИзПараметров, Заменитель, ПараметрыВыполнения.Разделитель);
		ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
		Возврат ПараметрыПоиска.ПолныеКлючиКоманд.Получить(ПолныйКлюч);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеКоманд

// Ключ команды поиска по метаданным.
// 
// Возвращаемое значение:
//  Строка
Функция КлючКомандыПоискаПоМетаданным()
	
	Возврат ФразаИнтерфейса("Метаданные");
	
КонецФункции

// Ключ команды поиска по формам.
// 
// Возвращаемое значение:
//  Строка
Функция КлючКомандыПоискаПоФормам()
	
	Возврат ФразаИнтерфейса("Формы");
	
КонецФункции

// Ключ команды вычисления выражения
// 
// Возвращаемое значение:
//  Строка
Функция КлючКомандыВычисленияВыражений()
	
	Возврат ФразаИнтерфейса("Выражение");
	
КонецФункции

// Полный ключ команды вычисления выражения
// 
// Возвращаемое значение:
//  Строка
Функция ПолныйКлючКомандыВычисленияВыражений()
	
	Возврат КлючОсновногоМенюРасширенногоГлобальногоПоиска() + КлючКомандыВычисленияВыражений();
	
КонецФункции

// Заполняет стандартные команды расширенного глобального поиска
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
Процедура ЗаполнитьСтандартныеКомандыРасширенногоГлобальногоПоиска(ПараметрыПоиска)

	ОбщаяКоманда = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, КлючОсновногоМенюРасширенногоГлобальногоПоиска());
	ОбщаяКоманда.ВозможнаСтрокаПоиска = Ложь;

	ЗаполнитьКомандуПоискаИзбранные(ПараметрыПоиска, ОбщаяКоманда);

	ЗаполнитьКомандыПоискаМетаданныхРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда);

	ЗаполнитьКомандыПоискаПоФормамРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда);

	ЗаполнитьКомандыВычисленияВыражения(ПараметрыПоиска, ОбщаяКоманда);
	
	ЗаполнитьКомандуНастройкиРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда);
	
	ЗаполнитьИнформационныеКомандыРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда);

КонецПроцедуры

// Заполняет команды вычисления выражения
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  ОбщаяКоманда - см. НоваяКомандаРасширенногоПоиска
Процедура ЗаполнитьКомандыВычисленияВыражения(ПараметрыПоиска, ОбщаяКоманда)
	
	СтандартныеКоманды = РГП_ГлобальныйПоискКлиентСервер.СтандартныеКоманды();
	
	ЭлементПланаПоиска = ЭлементПланаГлобальногоПоискаКоманды(
		"ГлобальныйПоискИсторияВычисленияВыражений", "РГП_ГлобальныйПоискСервер", Истина, Ложь, 5);
	
	ОсновнаяКоманда = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, КлючКомандыВычисленияВыражений(), ОбщаяКоманда);
	ОсновнаяКоманда.Представление = ФразаИнтерфейса("Вычислить выражение");
	ОсновнаяКоманда.Картинка = БиблиотекаКартинок.СинтаксическийКонтроль;
	ОсновнаяКоманда.ПланПоиска.Добавить(ЭлементПланаПоиска);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(ОсновнаяКоманда, СтандартныеКоманды.ВводСтроки);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(ОсновнаяКоманда, СтандартныеКоманды.Обновить);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(ОсновнаяКоманда, СтандартныеКоманды.Избранное);
	
	ЦветЗаголовка = ПараметрыПоиска.ЦветЗаголовковМеню;
	
	Представление = ФразаИнтерфейса("НаКлиенте");
	КомандаЭлементы = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, Представление, ОсновнаяКоманда);
	КомандаЭлементы.Представление = Новый ФорматированнаяСтрока("&" + Представление, , ЦветЗаголовка);
	КомандаЭлементы.Картинка = БиблиотекаКартинок.СформироватьОтчет;
	КомандаЭлементы.ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеВычисленияВыражения(
		ОсновнаяКоманда.ПолныйКлюч, Ложь);
	
	Представление = ФразаИнтерфейса("НаСервере");
	КомандаЭлементы = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, Представление, ОсновнаяКоманда);
	КомандаЭлементы.Представление = Новый ФорматированнаяСтрока("&" + Представление, , ЦветЗаголовка);
	КомандаЭлементы.Картинка = БиблиотекаКартинок.СформироватьОтчет;
	КомандаЭлементы.ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеВычисленияВыражения(
		ОсновнаяКоманда.ПолныйКлюч, Истина);
	
КонецПроцедуры

// Заполняет команды поиска избранного
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  ОбщаяКоманда - см. НоваяКомандаРасширенногоПоиска
Процедура ЗаполнитьКомандуПоискаИзбранные(ПараметрыПоиска, ОбщаяКоманда)

	ЭлементПланаПоиска = ЭлементПланаГлобальногоПоискаКоманды(
		"ГлобальныйПоискИзбранное", ИмяТекущегоМодуля());

	КлючКоманды = ФразаИнтерфейса("Избранное");
	ОписаниеКоманды = ФразаИнтерфейса("Избранные команды поиска");
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, КлючКоманды, ОбщаяКоманда);
	КомандаПоиска.Представление = КлючКоманды;
	КомандаПоиска.Описание = ОписаниеКоманды;
	КомандаПоиска.Картинка = БиблиотекаКартинок.Избранное;
	КомандаПоиска.ПланПоиска.Добавить(ЭлементПланаПоиска);
	КомандаПоиска.ВозможнаСтрокаПоиска = Ложь;
	
	СтандартныеКоманды = РГП_ГлобальныйПоискКлиентСервер.СтандартныеКоманды();
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(КомандаПоиска, СтандартныеКоманды.Обновить);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(КомандаПоиска, СтандартныеКоманды.ВводСтроки);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(КомандаПоиска, СтандартныеКоманды.Избранное);
	
КонецПроцедуры

// Заполняет команды поиска метаданных расширенного глобального поиска
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  ОбщаяКоманда - см. НоваяКомандаРасширенногоПоиска
Процедура ЗаполнитьКомандыПоискаМетаданныхРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда)

	ЭлементПланаПоиска = ЭлементПланаГлобальногоПоискаКоманды(
		"ГлобальныйПоискМетаданные", "РГП_ГлобальныйПоискСервер", Истина, Ложь);

	КлючКоманды = КлючКомандыПоискаПоМетаданным();
	КомандаПоискаМетаданных = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, КлючКоманды, ОбщаяКоманда);
	КомандаПоискаМетаданных.Представление = ФразаИнтерфейса("Поиск по метаданным");
	КомандаПоискаМетаданных.Описание = ФразаИнтерфейса("Поиск по именам, синонимам, представлениям и подсказкам");
	КомандаПоискаМетаданных.Картинка = БиблиотекаКартинок.ПоискДанных;
	КомандаПоискаМетаданных.ПланПоиска.Добавить(ЭлементПланаПоиска);
	
	КлючНастройки = РГП_ГлобальныйПоискКлиентСервер.КлючПользовательскойНастройки_ПоискМетаданных_ВариантыОтчетов();
	
	ТекущаяНастройка = РГП_ГлобальныйПоискКлиентСервер.НовыйОписаниеПользовательскойНастройки();
	ТекущаяНастройка.Ключ = КлючНастройки;
	ТекущаяНастройка.Представление = ФразаИнтерфейса("Выводить варианты отчетов");
	ТекущаяНастройка.Пояснение = ФразаИнтерфейса("Стоит ли выводить варианты отчетов и искать по ним?
	|	(может замедлять поиск)");
	ТекущаяНастройка.Тип = Новый ОписаниеТипов("Булево");
	
	ПредставлениеВыводить = ФразаИнтерфейса("Выводить");
	ПредставлениеНеВыводить = ФразаИнтерфейса("Не выводить");
	ТекущаяНастройка.ФорматнаяСтрока = СтрШаблон("БЛ='%1'; БИ='%2';", ПредставлениеНеВыводить, ПредставлениеВыводить);
	
	КомандаПоискаМетаданных.ОписанияНастроек.Вставить(ТекущаяНастройка.Ключ, ТекущаяНастройка);
	
КонецПроцедуры

// Заполняет команды поиска по формам
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  ОбщаяКоманда - см. НоваяКомандаРасширенногоПоиска
Процедура ЗаполнитьКомандыПоискаПоФормамРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда)

	СтандартныеКоманды = РГП_ГлобальныйПоискКлиентСервер.СтандартныеКоманды();
	ИмяТекущегоМодуля = ИмяТекущегоМодуля();
	
	ЭлементПланаПоискаФорм = ЭлементПланаГлобальногоПоискаКоманды(
		"ГлобальныйПоискПоОткрытымОкнам", ИмяТекущегоМодуля, Ложь, Ложь);
	
	ЭлементПланаПоискаЭлементов = ЭлементПланаГлобальногоПоискаКоманды(
		"ГлобальныйПоискПоЭлементамФормы", ИмяТекущегоМодуля, Ложь, Ложь);
	
	ОсновнаяКоманда = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, КлючКомандыПоискаПоФормам(), ОбщаяКоманда);
	ОсновнаяКоманда.Представление = ФразаИнтерфейса("Поиск по формам");
	ОсновнаяКоманда.Картинка = БиблиотекаКартинок.Форма;
	ОсновнаяКоманда.ПланПоиска.Добавить(ЭлементПланаПоискаФорм);
	
	КомандаЭлементы = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, 
		КлючКомандыПоискаПоЭлементамФормы(), ОсновнаяКоманда);
	КомандаЭлементы.Представление = ФразаИнтерфейса("Элементы");
	КомандаЭлементы.Картинка = БиблиотекаКартинок.ПоказатьДанные;
	КомандаЭлементы.ОтображатьВМеню = Ложь;
	КомандаЭлементы.ПриПереходеНазадОчищатьСтрокуПоиска = Истина;
	КомандаЭлементы.ПриПереходеНазадОчищатьПараметры = Истина;
	КомандаЭлементы.ПланПоиска.Добавить(ЭлементПланаПоискаЭлементов);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(КомандаЭлементы, СтандартныеКоманды.Избранное);
	
	КлючПараметра = КлючПараметраИдентификатораФормыКомандыПоискаПоФормам();
	ОписаниеПредставления = РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения(
		"ЗаполнитьПредставлениеПараметраКоманды_Форма", ИмяТекущегоМодуля);	
	ПараметрКоманды = РГП_ГлобальныйПоискКлиентСервер.ОписаниеПараметраКоманды(
		КлючПараметра, ФразаИнтерфейса("Форма"), "УникальныйИдентификатор", ОписаниеПредставления);
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьДоступныйПараметрКоманды(КомандаЭлементы.Параметры, ПараметрКоманды);

КонецПроцедуры

// Заполняет команду настройки расширенного глобального поиска
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  ОбщаяКоманда - см. НоваяКомандаРасширенногоПоиска
Процедура ЗаполнитьКомандуНастройкиРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда)

	ЭлементПлана = ЭлементПланаГлобальногоПоискаКоманды(
		"ГлобальныйПоискНастройки", ИмяТекущегоМодуля(), Ложь, Ложь);

	ФразаНастройки = ФразаИнтерфейса("Настройки");
	Команда = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, ФразаНастройки, ОбщаяКоманда);
	Команда.ВозможнаСтрокаПоиска = Ложь;
	Команда.Картинка = БиблиотекаКартинок.Настройка;
	Команда.ПланПоиска.Добавить(ЭлементПлана);
	
	ФразаНастройка = ФразаИнтерфейса("Настройка");
	КлючПараметра = КлючПараметраКомандыРедактораНастройки();
	ПараметрНастройка = РГП_ГлобальныйПоискКлиентСервер.ОписаниеПараметраКоманды(
		КлючПараметра, ФразаНастройка, "Строка");
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьДоступныйПараметрКоманды(Команда.Параметры, ПараметрНастройка);
	
	ФразаКоманда = ФразаИнтерфейса("Команда");
	КлючПараметра = РГП_ГлобальныйПоискКлиентСервер.КлючПараметраКоманды_Настройки_Команда();
	ПараметрНастройка = РГП_ГлобальныйПоискКлиентСервер.ОписаниеПараметраКоманды(КлючПараметра, ФразаКоманда, "Строка");
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьДоступныйПараметрКоманды(Команда.Параметры, ПараметрНастройка);
	
	СтандартныеКоманды = РГП_ГлобальныйПоискКлиентСервер.СтандартныеКоманды();
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(Команда, СтандартныеКоманды.ВводСтроки);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(Команда, СтандартныеКоманды.Обновить);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(Команда, СтандартныеКоманды.Избранное);
	
КонецПроцедуры

// Заполняет информационные команды расширенного глобального поиска
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  ОбщаяКоманда - см. НоваяКомандаРасширенногоПоиска
Процедура ЗаполнитьИнформационныеКомандыРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда)

	СтандартныеКоманды = РГП_ГлобальныйПоискКлиентСервер.СтандартныеКоманды();

	КлючИнфо = ФразаИнтерфейса("Информация");
	ИнформационнаяКоманда = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, КлючИнфо, ОбщаяКоманда);
	ИнформационнаяКоманда.ВозможнаСтрокаПоиска = Ложь;
	ИнформационнаяКоманда.Представление = ФразаИнтерфейса("О расширении глобального поиска");
	ИнформационнаяКоманда.Картинка = БиблиотекаКартинок.Информация;
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(ИнформационнаяКоманда, СтандартныеКоманды.ВводСтроки);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(ИнформационнаяКоманда, СтандартныеКоманды.Обновить);
	ИсключитьСтандартнуюКомандуИзКомандыПоиска(ИнформационнаяКоманда, СтандартныеКоманды.Избранное);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, "GitHub", ИнформационнаяКоманда);
	КомандаПоиска.Представление = ФразаИнтерфейса("Открыть репозиторий");
	КомандаПоиска.Картинка = БиблиотекаКартинок.РГП_GitHub;
	КомандаПоиска.ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОткрытияЗначения(
		ПараметрыПоиска.ОписаниеРасширения.Репозиторий);
	
	Представление = ФразаИнтерфейса("Текущая версия");
	КомандаПоиска = НоваяКомандаРасширенногоПоиска(ПараметрыПоиска, ФразаИнтерфейса("Версия"), ИнформационнаяКоманда);
	КомандаПоиска.Представление = СтрШаблон("%1: %2", Представление, ПараметрыПоиска.ОписаниеРасширения.Версия);
	КомандаПоиска.Картинка = БиблиотекаКартинок.Информация;
	КомандаПоиска.ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеПустое();

КонецПроцедуры

// Выполнить глобальный поиск по строке.
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
//  СтрокаПоиска - Строка
// 
Процедура ОбработчикВыполнитьГлобальныйПоискПоСтроке(ВыполняемоеДействие, СтрокаПоиска) Экспорт
	
	ГлобальныйПоиск.НачатьПоиск(СтрокаПоиска);
	
КонецПроцедуры

#КонецОбласти

#Область ОписанияТипов

// Упорядоченная коллекция команд расширенного глобального поиска.
// Нужна для правильного порядка вывода команд пользователю
// 
// Возвращаемое значение:
//  Массив из см. НоваяКомандаРасширенногоПоиска
Функция УпорядоченнаяКоллекцияКомандРасширенногоГлобальногоПоиска()

	Возврат Новый Массив;

КонецФункции

// Описание расширения.
// 
// Возвращаемое значение:
//  Структура -  Описание расширения:
// * Версия - Строка - Номер версии расширения
// * Репозиторий - Строка - Адрес репозитория
Функция ОписаниеРасширения()
	
	Результат = Новый Структура;
	Результат.Вставить("Версия", "");
	Результат.Вставить("Репозиторий", "");
	
	Возврат Результат;
	
КонецФункции

// Коллекция кэшированных данных параметров поиска.
// 
// Возвращаемое значение:
//  Структура -  Коллекция кэшированных данных параметров поиска:
// * ПраваПользователя - см. КоллекцияКэшаПравПользователя
// * РолиПользователя - см. КоллекцияКэшаРолейПользователя
// * ШрифтыСтиля - см. КоллекцияКэшаШрифтовСтиля
// * ЦветаСтиля - см. КоллекцияКэшаЦветовСтиля
// * ЭтоПолноправныйПользователь - Булево
Функция КоллекцияКэшированныхДанныхПараметровПоиска()
	
	Результат = Новый Структура;
	Результат.Вставить("ПраваПользователя", КоллекцияКэшаПравПользователя());
	Результат.Вставить("РолиПользователя", КоллекцияКэшаРолейПользователя());
	Результат.Вставить("ШрифтыСтиля", КоллекцияКэшаШрифтовСтиля());
	Результат.Вставить("ЦветаСтиля", КоллекцияКэшаЦветовСтиля());
	Результат.Вставить("ЭтоПолноправныйПользователь", Ложь);
	Возврат Результат;
	
КонецФункции

// Коллекция кэша прав доступа.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение -:
//  * Ключ - Строка - Ключ, сформированный из права и полного имени метаданного
//  * Значение - Булево - Доступность права для текущего пользователя
Функция КоллекцияКэшаПравПользователя()
	
	Возврат Новый Соответствие();
	
КонецФункции

// Коллекция кэша прав доступа.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение -:
//  * Ключ - Строка - Имя роли
//  * Значение - Булево - Доступность роли для текущего пользователя
Функция КоллекцияКэшаРолейПользователя()
	
	Возврат Новый Соответствие();
	
КонецФункции

// Коллекция кэша шрифтов стиля.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение -:
//  * Ключ - Строка
//  * Значение - Шрифт
Функция КоллекцияКэшаШрифтовСтиля()
	
	Возврат Новый Соответствие();
	
КонецФункции

// Коллекция кэша цветов стиля.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение -:
//  * Ключ - Строка
//  * Значение - Цвет
Функция КоллекцияКэшаЦветовСтиля()
	
	Возврат Новый Соответствие();
	
КонецФункции

// Иерархическая коллекция команд параметров расширенного глобального поиска.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - см. НоваяКомандаРасширенногоПоиска
Функция КоллекцияКомандПараметровРасширенногоГлобальногоПоиска()

	Возврат Новый Соответствие;

КонецФункции

// Коллекция всех команд по полному ключу
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - см. НоваяКомандаРасширенногоПоиска
Функция КоллекцияВсехКомандПараметровРасширенногоГлобальногоПоиска()

	Возврат Новый Соответствие;

КонецФункции

#КонецОбласти

#Область ПользовательскиеНастройки

Процедура ОбработатьЗначенияПользовательскихНастроекКоманд(ПараметрыПоиска)
	
	Для Каждого КомандаИНастройки Из ПараметрыПоиска.ПользовательскиеНастройки.НастройкиКоманд Цикл
		
		КлючКоманды = КомандаИНастройки.Ключ;
		Настройки = КомандаИНастройки.Значение;
		
		Команда = ПараметрыПоиска.ПолныеКлючиКоманд.Получить(КлючКоманды);
		
		РГП_ГлобальныйПоискКлиентСервер.ОбработатьЗначенияПользовательскихНастроек(
			Настройки, Команда.ОписанияНастроек);
			
	КонецЦикла;
	
КонецПроцедуры

// Глобальный поиск настройки - Вывести общие настройки.
// 
// Параметры:
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
//  КомандаИзПараметров - см. НоваяКомандаРасширенногоПоиска
Процедура ГлобальныйПоискНастройки_ВывестиНастройки(РезультатыПоиска, ПараметрыВыполнения, КомандаИзПараметров)
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	ОписанияНастроек = ПараметрыПоиска.ОписанияПользовательскихНастроек;
	
	Если ЗначениеЗаполнено(КомандаИзПараметров) Тогда
		ОписанияНастроек = КомандаИзПараметров.ОписанияНастроек;
	Иначе
		ОписанияНастроек = ПараметрыПоиска.ОписанияПользовательскихНастроек;
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ОписанияНастроек Цикл
			
		ОписаниеНастройки = КлючИЗначение.Значение;
		ТекущееЗначение = Неопределено;
		ПредставлениеЗначения = ""; 
		ЗначениеПреставлениеПользовательскойНастройки(ПараметрыПоиска,
			КлючИЗначение.Ключ, ТекущееЗначение, ПредставлениеЗначения, КомандаИзПараметров);
		
		ПередаваемыеПараметры = РГП_ГлобальныйПоискКлиентСервер.Структура(ПараметрыВыполнения.ПараметрыКоманды);
		ПередаваемыеПараметры.Вставить(КлючПараметраКомандыРедактораНастройки(), КлючИЗначение.Ключ);
		ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеПереходаНаКоманду(
			ПараметрыВыполнения.ПолныйКлюч, ПередаваемыеПараметры, "");
		
		ПредставлениеНастройки = Новый ФорматированнаяСтрока(
			РГП_ГлобальныйПоискКлиентСервер.СтрокаЗаголовком(ОписаниеНастройки.Представление),
			":	", ПредставлениеЗначения);
		
		ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
			ВыполняемоеДействие, ПредставлениеНастройки, ОписаниеНастройки.Картинка);
		РезультатыПоиска.Добавить(ЭлементРезультата);

	КонецЦикла;
	
КонецПроцедуры

// Глобальный поиск настройки - Вывести общие настройки.
// 
// Параметры:
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
Процедура ГлобальныйПоискНастройки_ВывестиКоманды(РезультатыПоиска, ПараметрыВыполнения)
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	
	Для Каждого КлючИЗначение Из ПараметрыПоиска.ПолныеКлючиКоманд Цикл
		
		КомандаПоиска = КлючИЗначение.Значение;
		Если ЗначениеЗаполнено(КомандаПоиска.ОписанияНастроек) Тогда
			
			ПередаваемыеПараметры = РГП_ГлобальныйПоискКлиентСервер.Структура(ПараметрыВыполнения.ПараметрыКоманды);
			ВставитьПолныйКлючКомандыВПередаваемыеПараметры(ПередаваемыеПараметры, КомандаПоиска);
			
			ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеПереходаНаКоманду(
				ПараметрыВыполнения.ПолныйКлюч, ПередаваемыеПараметры, ПараметрыВыполнения.СтрокаПоиска);
			
			Представление = ФразаИнтерфейса("Команда");
			Представление = СтрШаблон("%1: %2", Представление, КомандаПоиска.Представление);
			Представление = РГП_ГлобальныйПоискКлиентСервер.СтрокаЗаголовком(Представление);
			
			ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
				ВыполняемоеДействие, Представление, КомандаПоиска.Картинка);
			РезультатыПоиска.Добавить(ЭлементРезультата);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Ключ параметра команды редактора настройки.
// 
// Возвращаемое значение:
//  Строка
Функция КлючПараметраКомандыРедактораНастройки()
	
	Возврат ФразаИнтерфейса("Настройка");
	
КонецФункции

// Глобальный поиск настройки - Команды очистки.
// 
// Параметры:
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
//  КомандаИзПараметров - см. НоваяКомандаРасширенногоПоиска
Процедура ГлобальныйПоискНастройки_КомандыОчистки(РезультатыПоиска, ПараметрыВыполнения, КомандаИзПараметров)
	
	ПараметрыОчистки = РГП_ГлобальныйПоискКлиентСервер.ПараметрыВыполненияКомандыОчисткиНастроек();
	Если ЗначениеЗаполнено(КомандаИзПараметров) Тогда
		ПараметрыОчистки.КлючКоманды =  КомандаИзПараметров.ПолныйКлюч;
	КонецЕсли;
	
	Представление = ФразаИнтерфейса("Сбросить настройки");
	ГлобальныйПоискНастройки_ДобавитьКомандуОчистки(
		РезультатыПоиска, ПараметрыВыполнения, ПараметрыОчистки, Представление);
	
КонецПроцедуры

// Глобальный поиск настройки - Команды очистки.
// 
// Параметры:
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
//  ПараметрыОчистки - см. РГП_ГлобальныйПоискКлиентСервер.ПараметрыВыполненияКомандыОчисткиНастроек
//  Представление - Строка
Процедура ГлобальныйПоискНастройки_ДобавитьКомандуОчистки(
	РезультатыПоиска, ПараметрыВыполнения, ПараметрыОчистки, Знач Представление)
	
	ОписаниеОповещения = РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения(
		"ГлобальныйПоискСброситьНастройки", ИмяТекущегоМодуля(), ПараметрыОчистки);
	ДействиеСброса = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОписанияОповещения(ОписаниеОповещения);
	
	ДействиеОбновить = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОбновитьРезультаты(ПараметрыВыполнения);
	
	НаборДействий = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеНабораДействий(ДействиеСброса, ДействиеОбновить);
	
	Представление = РГП_ГлобальныйПоискКлиентСервер.СтрокаЗаголовком(Представление);
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьЭлементРезультатаГлобальногоПоиска(
		РезультатыПоиска, НаборДействий, Представление, БиблиотекаКартинок.СтандартнаяНастройкаКомпоновкиДанных);
	
КонецПроцедуры

// Глобальный поиск настройки - Вывести значения настройки.
// 
// Параметры:
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
//  КомандаИзПараметров - см. НоваяКомандаРасширенногоПоиска
Процедура ГлобальныйПоискНастройки_ВывестиЗначения(РезультатыПоиска, ПараметрыВыполнения, КомандаИзПараметров)
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	
	ПараметрыУстановки = ПараметрыОбработчикаВыбораНовогоЗначенияПользовательскойНастройки();
	
	Если ЗначениеЗаполнено(КомандаИзПараметров) Тогда
		ОписанияНастроек = КомандаИзПараметров.ОписанияНастроек;
		ПараметрыУстановки.КлючКоманды = КомандаИзПараметров.ПолныйКлюч; 
	Иначе
		ОписанияНастроек = ПараметрыПоиска.ОписанияПользовательскихНастроек;
	КонецЕсли;
	
	КлючНастройки = ПараметрыВыполнения.ПараметрыКоманды[КлючПараметраКомандыРедактораНастройки()]; // Строка
	
	ОписаниеНастройки = РГП_ГлобальныйПоискКлиентСервер.ОписаниеПользовательскойНастройки(
		ОписанияНастроек, КлючНастройки);
	ПараметрыУстановки.КлючНастройки = ОписаниеНастройки.Ключ;
			
	ПояснениеНастройки = Новый ФорматированнаяСтрока(ОписаниеНастройки.Пояснение, , ПараметрыПоиска.ЦветЗаголовковМеню);
	ПустоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеПустое();
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьЭлементРезультатаГлобальногоПоиска(
		РезультатыПоиска, ПустоеДействие, ПояснениеНастройки, БиблиотекаКартинок.Справка);
	
	ТекущееЗначение = Неопределено;
	ПредставлениеЗначения = "";
	ЗначениеПреставлениеПользовательскойНастройки(ПараметрыПоиска,
		КлючНастройки, ТекущееЗначение, ПредставлениеЗначения, КомандаИзПараметров);
	
	ПоказатьВводЗначения = Истина;
	
	ДоступныеЗначения = Новый СписокЗначений(); // СписокЗначений из Неопределено
	Для Каждого ЭлементСписка Из ОписаниеНастройки.ДоступныеЗначения Цикл
		ДоступныеЗначения.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление, 
			ЭлементСписка.Пометка, ЭлементСписка.Картинка);
		ПоказатьВводЗначения = Ложь;
	КонецЦикла;
	
	Если ОписаниеНастройки.ДоступноАвто И ДоступныеЗначения.НайтиПоЗначению(Неопределено) = Неопределено Тогда
		ДоступныеЗначения.Вставить(0, Неопределено);
	КонецЕсли;
	
	Если ПоказатьВводЗначения 
		И ОписаниеНастройки.Тип.Типы().Количество() = 1 
		И ОписаниеНастройки.Тип.СодержитТип(Тип("Булево")) Тогда
		ДоступныеЗначения.Добавить(Ложь);
		ДоступныеЗначения.Добавить(Истина);
		ПоказатьВводЗначения = Ложь;
	КонецЕсли;
	
	ГлобальныйПоискНастройки_ВывестиЗначения_ДоступныеЗначения(ПараметрыВыполнения, РезультатыПоиска, 
		ОписаниеНастройки, ДоступныеЗначения, ТекущееЗначение, ПараметрыУстановки);
	
	Если ПоказатьВводЗначения Тогда
		
		ГлобальныйПоискНастройки_ВывестиЗначения_ЭлементВводЗначения(ПараметрыВыполнения, РезультатыПоиска, 
			ОписаниеНастройки, ТекущееЗначение, ПредставлениеЗначения, ПараметрыУстановки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ГлобальныйПоискНастройки_ВывестиЗначения_ДоступныеЗначения(ПараметрыВыполненияКоманды, РезультатыПоиска, 
	ОписаниеНастройки, ДоступныеЗначения, ТекущееЗначение, ШаблонПараметровУстановки)
	
	КартинкаПоУмолчанию = БиблиотекаКартинок.Реквизит;
	КлючТекущейНастройки = КлючПараметраКомандыРедактораНастройки();
		
	Для Каждого ДоступноеЗначение Из ДоступныеЗначения Цикл
		
		ТекущееПредставление = РГП_ГлобальныйПоискКлиентСервер.ПредставлениеЗначенияПользовательскойНастройки(
			ОписаниеНастройки, ДоступноеЗначение.Значение);
		Если ДоступноеЗначение.Значение = ТекущееЗначение Тогда
			ТекущееПредставление = РГП_ГлобальныйПоискКлиентСервер.СтрокаЗаголовком(ТекущееПредставление);
		КонецЕсли;
		
		ПараметрыУстановки = ПараметрыОбработчикаВыбораНовогоЗначенияПользовательскойНастройки();
		ЗаполнитьЗначенияСвойств(ПараметрыУстановки, ШаблонПараметровУстановки);
		ПараметрыУстановки.НовоеЗначение = ДоступноеЗначение.Значение;
		
		ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеНазадИзПараметров(
			ПараметрыВыполненияКоманды, КлючТекущейНастройки);
		
		ОписаниеОповещения = РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения(
			"ОбработчикВыбораНовогоЗначенияПользовательскойНастройки", ИмяТекущегоМодуля(), ПараметрыУстановки);
		ВыполняемоеДействие.ОписаниеОповещения = ОписаниеОповещения;
		
		Картинка = ?(ЗначениеЗаполнено(ДоступноеЗначение.Картинка), ДоступноеЗначение.Картинка, КартинкаПоУмолчанию);
		
		РГП_ГлобальныйПоискКлиентСервер.ДобавитьЭлементРезультатаГлобальногоПоиска(
			РезультатыПоиска, ВыполняемоеДействие, ТекущееПредставление, Картинка);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ГлобальныйПоискНастройки_ВывестиЗначения_ЭлементВводЗначения(ПараметрыВыполненияКоманды, РезультатыПоиска, 
	ОписаниеНастройки, ТекущееЗначение, ПредставлениеЗначения, ШаблонПараметровУстановки)
	
	КартинкаПоУмолчанию = БиблиотекаКартинок.Реквизит;
	
	ПараметрыУстановки = ПараметрыОбработчикаВыбораНовогоЗначенияПользовательскойНастройки();
	ЗаполнитьЗначенияСвойств(ПараметрыУстановки, ШаблонПараметровУстановки);
	
	ТекущееПредставление = ФразаИнтерфейса("Текущее значение");
	ТекущееПредставление = СтрШаблон("%1: %2", ТекущееПредставление, ПредставлениеЗначения);
	ОписаниеОповещения = РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения(
		"ОбработчикВводаНовогоЗначенияПользовательскойНастройки", ИмяТекущегоМодуля(), ПараметрыУстановки);
	
	ПараметрыДействия = РГП_ГлобальныйПоискКлиентСервер.ПараметрыВыполняемогоДействияВводаЗначения(
		ОписаниеОповещения, ТекущееЗначение, ОписаниеНастройки.Представление, ОписаниеНастройки.Тип);
	
	ДействиеВводаЗначения = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеВводаЗначения(ПараметрыДействия);
	ДействиеПереходаНазад = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеНазадИзПараметров(
		ПараметрыВыполненияКоманды);
	
	ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеНабораДействий(
		ДействиеВводаЗначения, ДействиеПереходаНазад);
	
	РГП_ГлобальныйПоискКлиентСервер.ДобавитьЭлементРезультатаГлобальногоПоиска(
		РезультатыПоиска, ВыполняемоеДействие, ТекущееПредставление, КартинкаПоУмолчанию);
	
КонецПроцедуры

// Значение пользовательской настройки.
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  КлючНастройки - Строка
//  Значение - Неопределено, Произвольный - Исходящий параметр
//  Представление - Строка - Исходящий параметр
//  КомандаПоиска - см. НоваяКомандаРасширенногоПоиска
// 
Процедура ЗначениеПреставлениеПользовательскойНастройки(
	ПараметрыПоиска, Знач КлючНастройки, Значение, Представление, КомандаПоиска = Неопределено)
	
	Если КомандаПоиска = Неопределено Тогда
		ОписанияНастроек = ПараметрыПоиска.ОписанияПользовательскихНастроек;
		ЗначенияНастроек = ПараметрыПоиска.ПользовательскиеНастройки.ОбщиеНастройки;
	Иначе
		ОписанияНастроек = КомандаПоиска.ОписанияНастроек;
		ЗначенияНастроек = ПараметрыПоиска.ПользовательскиеНастройки.НастройкиКоманд.Получить(КомандаПоиска.ПолныйКлюч);
	КонецЕсли;
	
	ОписаниеНастройки = РГП_ГлобальныйПоискКлиентСервер.ОписаниеПользовательскойНастройки(
		ОписанияНастроек, КлючНастройки);
	
	Значение = ОписаниеНастройки.ЗначениеПоУмолчанию;
	ПользовательскоеЗначение = Неопределено;
	Если ЗначенияНастроек <> Неопределено И ЗначенияНастроек.Свойство(КлючНастройки, ПользовательскоеЗначение) Тогда
		Значение = ПользовательскоеЗначение;
	КонецЕсли;
	
	РГП_ГлобальныйПоискКлиентСервер.ПривестиЗначениеКПользовательскойНастройке(Значение, ОписаниеНастройки);
		
	Представление = РГП_ГлобальныйПоискКлиентСервер.ПредставлениеЗначенияПользовательскойНастройки(
		ОписаниеНастройки, Значение);
	
КонецПроцедуры

#КонецОбласти

#Область ВыполняемыеДействия

// Обработать данные результата глобального поиска - Описание оповещения.
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
Процедура ОбработатьДанныеРезультатаГлобальногоПоиска_ОписаниеОповещения(ВыполняемоеДействие)
				
	ОписаниеОповещения = ОписаниеОповещения(ВыполняемоеДействие.ОписаниеОповещения);
	Если ТипЗнч(ОписаниеОповещения) = Тип("ОписаниеОповещения") Тогда
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, ВыполняемоеДействие);
	КонецЕсли;

КонецПроцедуры

// Обработать данные результата глобального поиска - Открываемое значение.
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
Процедура ОбработатьДанныеРезультатаГлобальногоПоиска_ОткрываемоеЗначение(ВыполняемоеДействие)
				
	Если ВыполняемоеДействие.ОткрываемоеЗначение <> Неопределено Тогда
		ПоказатьОткрываемоеЗначение(ВыполняемоеДействие.ОткрываемоеЗначение);
	КонецЕсли;

КонецПроцедуры

// Обработать данные результата глобального поиска - Путь перехода.
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
Процедура ОбработатьДанныеРезультатаГлобальногоПоиска_ПутьПерехода(ВыполняемоеДействие)
	
	Если ПустаяСтрока(ВыполняемоеДействие.КомандаПоиска) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	КомандаПоиска = ПараметрыПоиска.ПолныеКлючиКоманд.Получить(ВыполняемоеДействие.КомандаПоиска);
	Если КомандаПоиска = Неопределено Тогда
		ТекстИсключения = ФразаИнтерфейса("Не найдена команда поиска");
		ТекстИсключения = СтрШаблон("%1: %2", ТекстИсключения, ВыполняемоеДействие.КомандаПоиска);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЧастиСтроки = Новый Массив; // Массив из Строка
	СтрокаПараметров = СтрокаПараметровКомандыПоиска(ПараметрыПоиска, 
		КомандаПоиска, ВыполняемоеДействие.ПараметрыПоиска);
	Если ЗначениеЗаполнено(СтрокаПараметров) Тогда
		
		ПолныйКлючБезРазделителя = Лев(КомандаПоиска.ПолныйКлюч, 
			СтрДлина(КомандаПоиска.ПолныйКлюч) - СтрДлина(КомандаПоиска.Разделитель));
		
		ЧастиСтроки.Добавить(ПолныйКлючБезРазделителя);
		ЧастиСтроки.Добавить(ПараметрыПоиска.РазделительМеждуКомандойИПараметрами);
		ЧастиСтроки.Добавить(СтрокаПараметров);
		ЧастиСтроки.Добавить(КомандаПоиска.Разделитель);
		
	Иначе
		
		ЧастиСтроки.Добавить(КомандаПоиска.ПолныйКлюч);
		
	КонецЕсли;
	
	Если КомандаПоиска.ВозможнаСтрокаПоиска И ЗначениеЗаполнено(ВыполняемоеДействие.СтрокаПоиска) Тогда
		ЧастиСтроки.Добавить(ВыполняемоеДействие.СтрокаПоиска);
	КонецЕсли;
	
	СтрокаПерехода = СтрСоединить(ЧастиСтроки, "");
	Если ЗначениеЗаполнено(СтрокаПерехода) Тогда
		ГлобальныйПоиск.НачатьПоиск(СтрокаПерехода);
	КонецЕсли;

КонецПроцедуры

// Обработать данные результата глобального поиска - Открываемая форма.
// 
// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
Процедура ОбработатьДанныеРезультатаГлобальногоПоиска_ОткрываемаяФорма(ВыполняемоеДействие)
				
	Если ВыполняемоеДействие.ОткрываемаяФорма <> Неопределено Тогда
				
		ОткрываемаяФорма = ВыполняемоеДействие.ОткрываемаяФорма;
		
		// @skip-check invocation-parameter-type-intersect
		ОткрытьФорму(ОткрываемаяФорма.ИмяФормы, ОткрываемаяФорма.Параметры, 
			ОткрываемаяФорма.Владелец, ОткрываемаяФорма.Уникальность,
			ОткрываемаяФорма.Окно, ОткрываемаяФорма.НавигационнаяСсылка,
			ОткрываемаяФорма.ОписаниеОповещенияОЗакрытии, ОткрываемаяФорма.РежимОткрытияОкна);
			
	КонецЕсли;

КонецПроцедуры

// Параметры:
//  ВыполняемоеДействие - см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействие
// 
// Возвращаемое значение:
//  ОписаниеОповещения
Функция ОписаниеОповещенияВыполняемогоДействия(ВыполняемоеДействие) Экспорт
	
	Возврат Новый ОписаниеОповещения("ОбработчикОповещенияВыполненияДействия", ЭтотОбъект, ВыполняемоеДействие);
	
КонецФункции

#КонецОбласти

#Область ПриГлобальномПоиске

// Вывести данные команды при глобальном поиске.
// 
// Параметры:
//  ПланПоиска - ПланГлобальногоПоиска
//  ТекущаяКоманда - см. НоваяКомандаРасширенногоПоиска
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
Процедура ВывестиДанныеКомандыПриГлобальномПоиске(ПланПоиска, ТекущаяКоманда, ПараметрыВыполнения)

	ДобавитьЭлементПланаСтандартныхКоманд(ПланПоиска, ТекущаяКоманда, ПараметрыВыполнения);

	ДобавитьЭлементПланаПоискаТекущегоМодуля(ПланПоиска, 
		"ОбработчикСтандартнойКомандыПоиска_ВывестиКоманды", ПараметрыВыполнения);
	
	Для Каждого ЭлементПлана Из ТекущаяКоманда.ПланПоиска Цикл
		
		Порядок = ?(ЭлементПлана.Порядок = 0, ПланПоиска.Количество(), ЭлементПлана.Порядок);
		
		ПланПоиска.Добавить(ЭлементПлана.ИмяПроцедуры, ЭлементПлана.Модуль, ЭлементПлана.НаСервере,
			ЭлементПлана.Фоновый, Порядок, ПараметрыВыполнения);
			
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ГлобальныйПоискПоОткрытымФормам

// Общие параметры выполнения глобального поиска по открытым окнам.
// 
// Параметры:
//  СтрокаПоиска - см. ГлобальныйПоискПоОткрытымОкнам.СтрокаПоиска
//  РезультатыПоиска - см. ГлобальныйПоискПоОткрытымОкнам.РезультатыПоиска
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
// 
// Возвращаемое значение:
//  Структура - Общие параметры выполнения глобального поиска по открытым окнам:
// * ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
// * ВыводВсехДанных - Булево - Выводить ли все окна или искать среди них
// * КартинкаФорма - Картинка - Картинка для форм
// * КартинкаЗакрыть - Картинка - Картинка для команды закрытия
// * КартинкаОткрыть - Картинка - Картинка для команды открытия
// * КартинкаДанные - Картинка - Картинка для команды инспектирования
// * КартинкаОбновить - Картинка - Картинка для команды обновления
// * ОповещениеОткрытие - см. РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения
// * ОповещениеЗакрытие - см. РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения
// * РезультатыПоиска - см. ГлобальныйПоискПоОткрытымОкнам.РезультатыПоиска
// * ВыведеноФорм - Число - Сколько уже выведено форм
Функция ОбщиеПараметрыВыполненияГлобальногоПоискаПоОткрытымФормам(СтрокаПоиска, РезультатыПоиска, ПараметрыВыполнения)
	
	ОбщиеПараметры = Новый Структура;
	ОбщиеПараметры.Вставить("ПараметрыВыполнения", ПараметрыВыполнения);
	ОбщиеПараметры.Вставить("ВыводВсехДанных"    , НЕ ЗначениеЗаполнено(ПараметрыВыполнения.СловаПоиска));
	
	ОбщиеПараметры.Вставить("КартинкаФорма"    , БиблиотекаКартинок.Форма);
	ОбщиеПараметры.Вставить("КартинкаЗакрыть"  , БиблиотекаКартинок.Закрыть);
	ОбщиеПараметры.Вставить("КартинкаОткрыть"  , БиблиотекаКартинок.ПолеВводаОткрыть);
	ОбщиеПараметры.Вставить("КартинкаДанные"   , БиблиотекаКартинок.ПоказатьДанные);
	ОбщиеПараметры.Вставить("КартинкаОбновить" , БиблиотекаКартинок.Обновить);
	
	ОбщиеПараметры.Вставить("ОповещениеОткрытие", 
		РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения("АктивироватьФорму", ЭтотОбъект));
	ОбщиеПараметры.Вставить("ОповещениеЗакрытие", 
		РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения("ЗакрытьФорму", ЭтотОбъект));
	
	ОбщиеПараметры.Вставить("РезультатыПоиска", РезультатыПоиска);
	
	ОбщиеПараметры.Вставить("ВыведеноФорм", 0);
	
	Возврат ОбщиеПараметры;
	
КонецФункции

// Глобальный поиск по открытым окнам - вывести открытые формы.
// 
// Параметры:
//  ОбщиеПараметры - см. ОбщиеПараметрыВыполненияГлобальногоПоискаПоОткрытымФормам
Процедура ГлобальныйПоискПоОткрытымФормам_ВывестиОткрытыеФормы(ОбщиеПараметры)
	
	ПодходящиеФормы = Новый Массив; // Массив из ФормаКлиентскогоПриложения
	
	ОткрытыеОкна = ПолучитьОкна();
	Для Каждого Окно Из ОткрытыеОкна Цикл
		
		Для Каждого Форма Из Окно.Содержимое Цикл

			Если ТипЗнч(Форма) = Тип("ФормаКлиентскогоПриложения") Тогда
				
				Если ОткрытаяФормаПодходитПодУсловияПоиска(ОбщиеПараметры, Форма, Окно) Тогда
					ПодходящиеФормы.Добавить(Форма);
				КонецЕсли;

			КонецЕсли;

		КонецЦикла;

	КонецЦикла;
	
	ПараметрыВывода = РГП_ГлобальныйПоискКлиентСервер.ПараметрыОбработкиСтраницРезультатаКоманды(
		ОбщиеПараметры.ПараметрыВыполнения, ПодходящиеФормы, ОбщиеПараметры.РезультатыПоиска);
	
	Для Каждого Форма Из ПараметрыВывода.ВыводимыеСтроки Цикл // ФормаКлиентскогоПриложения
		
		ПредставлениеРезультата = ?(ПустаяСтрока(Форма.Заголовок), Форма.Окно.Заголовок, Форма.Заголовок);
		ГлобальныйПоискПоОткрытымФормам_ДобавитьРезультат(ОбщиеПараметры, Форма, ПредставлениеРезультата);

	КонецЦикла;
	
КонецПроцедуры

// Открытая форма подходит под условия поиска.
// 
// Параметры:
//  ОбщиеПараметры - см. ОбщиеПараметрыВыполненияГлобальногоПоискаПоОткрытымФормам
//  Форма - ФормаКлиентскогоПриложения - Текущая форма
//  Окно - ОкноКлиентскогоПриложения - Текущее окно
//  
// Возвращаемое значение:
//  Булево
Функция ОткрытаяФормаПодходитПодУсловияПоиска(ОбщиеПараметры, Форма, Окно)
	
	ПараметрыВыполнения = ОбщиеПараметры.ПараметрыВыполнения;
	ФормаПодходит = ОбщиеПараметры.ВыводВсехДанных;
				
	Для Каждого СловоПоиска Из ПараметрыВыполнения.СловаПоиска Цикл

		Если ФормаПодходит Тогда
			Прервать;
		КонецЕсли;

		Если СтрНайти(ВРег(Форма.Заголовок), СловоПоиска) > 0 
			ИЛИ СтрНайти(ВРег(Окно.Заголовок), СловоПоиска) > 0
			ИЛИ СтрНайти(ВРег(Форма.ИмяФормы), СловоПоиска) > 0 Тогда
			ФормаПодходит = Истина;
		КонецЕсли;

	КонецЦикла;
	
	Возврат ФормаПодходит;
	
КонецФункции

// Глобальный поиск по открытым окнам добавить результат.
// 
// Параметры:
//  ОбщиеПараметры - см. ОбщиеПараметрыВыполненияГлобальногоПоискаПоОткрытымФормам
//  Форма - ФормаКлиентскогоПриложения
//  ПредставлениеРезультата - Строка
Процедура ГлобальныйПоискПоОткрытымФормам_ДобавитьРезультат(ОбщиеПараметры, Форма, ПредставлениеРезультата)
	
	// Открытие формы
	ОповещениеОткрытие = ОбщиеПараметры.ОповещениеОткрытие;
	ДействиеОткрытие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОписанияОповещения(ОповещениеОткрытие);
	ДействиеОткрытие.ДополнительныеПараметры.Вставить("Форма", Форма);
	
	ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
		ДействиеОткрытие, ПредставлениеРезультата, ОбщиеПараметры.КартинкаФорма);
		
	ПредставлениеОткрыть = ФразаИнтерфейса("Открыть");
	ЭлементРезультата.Действия.Добавить(ДействиеОткрытие, ПредставлениеОткрыть, ОбщиеПараметры.КартинкаОткрыть);
	
	// Закрытие формы
	ОповещениеЗакрытие = ОбщиеПараметры.ОповещениеЗакрытие;
	ДействиеЗакрытие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОписанияОповещения(ОповещениеЗакрытие);
	ДействиеЗакрытие.ДополнительныеПараметры.Вставить("Форма", Форма);
	
	ДействиеОбновление = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОбновитьРезультаты(
		ОбщиеПараметры.ПараметрыВыполнения);
		
	ДействиеЗакрытие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеНабораДействий(
		ДействиеЗакрытие, ДействиеОбновление);
	
	ПредставлениеЗакрыть = ФразаИнтерфейса("Закрыть");
	ЭлементРезультата.Действия.Добавить(ДействиеЗакрытие, ПредставлениеЗакрыть, ОбщиеПараметры.КартинкаЗакрыть);
	
	// Элементы формы
	ПараметрыКоманды = Новый Структура(
		КлючПараметраИдентификатораФормыКомандыПоискаПоФормам(), Форма.УникальныйИдентификатор);
		
	ДействиеЭлементы = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеПереходаНаПодчиненнуюКоманду(
		ОбщиеПараметры.ПараметрыВыполнения, КлючКомандыПоискаПоЭлементамФормы(), ПараметрыКоманды);
	ДействиеЭлементы.СтрокаПоиска = "";
	
	ПредставлениеЭлементы = ФразаИнтерфейса("Элементы");
	ЭлементРезультата.Действия.Добавить(ДействиеЭлементы, ПредставлениеЭлементы, ОбщиеПараметры.КартинкаДанные);

	ОбщиеПараметры.РезультатыПоиска.Добавить(ЭлементРезультата);
	
КонецПроцедуры

// Ключ параметра идентификатора формы команды поиска по формам.
// 
// Возвращаемое значение:
//  Строка
Функция КлючПараметраИдентификатораФормыКомандыПоискаПоФормам()
	
	Возврат ФразаИнтерфейса("Форма");
	
КонецФункции

// Ключ команды поиска по элементам формы.
// 
// Возвращаемое значение:
//  Строка
Функция КлючКомандыПоискаПоЭлементамФормы()
	
	Возврат ФразаИнтерфейса("Элементы");
	
КонецФункции

#КонецОбласти

#Область ГлобальныйПоискПоЭлементамФормы

// Общие параметры выполнения глобального поиска по открытым окнам.
// 
// Параметры:
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
// 
// Возвращаемое значение:
//  Структура - Общие параметры выполнения глобального поиска по открытым окнам:
// * ПараметрыВыполнения - см. ПараметрыВыполненияКомандыПоиска
// * Форма - Неопределено - Форма не найдена, поиск выполняться не будет
//         - ФормаКлиентскогоПриложения - Форма элементы которой необходимо искать
// * ПриоритетыЭлементов - СписокЗначений из Число
// * Картинка - Картинка - Общая картинка для всех действий
// * ВыводВсехЭлементов - Булево - Выводить все элементы, если пустая строка поиска
// * ОписаниеАктивация - см. РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения
// * ОписаниеВыделения - см. РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения
Функция ОбщиеПараметрыВыполненияПоискаПоЭлементамФормы(ПараметрыВыполнения)
	
	ОписаниеАктивация = РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения("АктивироватьЭлементФормы", ЭтотОбъект);
	ОписаниеВыделения = РГП_ГлобальныйПоискКлиентСервер.ОписаниеОповещения("ВыделитьЭлементФормы", ЭтотОбъект);
	
	ИдентификаторФормы = Неопределено; // УникальныйИдентификатор
	ПараметрыВыполнения.ПараметрыКоманды.Свойство(
		КлючПараметраИдентификатораФормыКомандыПоискаПоФормам(), ИдентификаторФормы);
		
	ОбщиеПараметры = Новый Структура;
	ОбщиеПараметры.Вставить("ПараметрыВыполнения", ПараметрыВыполнения);
	ОбщиеПараметры.Вставить("Форма", ФормаПоУникальномуИдентификатору(ИдентификаторФормы));
	ОбщиеПараметры.Вставить("ПриоритетыЭлементов", Новый СписокЗначений); // СписокЗначений из Число
	ОбщиеПараметры.Вставить("Картинка", БиблиотекаКартинок.ПолеВводаОткрыть);
	ОбщиеПараметры.Вставить("ВыводВсехЭлементов", ПустаяСтрока(ПараметрыВыполнения.СтрокаПоиска));
	ОбщиеПараметры.Вставить("ОписаниеАктивация", ОписаниеАктивация);
	ОбщиеПараметры.Вставить("ОписаниеВыделения", ОписаниеВыделения);
	
	Возврат ОбщиеПараметры;
	
КонецФункции

// Глобальный поиск по открытым окнам - вывести открытые формы.
// 
// Параметры:
//  ОбщиеПараметры - см. ОбщиеПараметрыВыполненияПоискаПоЭлементамФормы
Процедура ГлобальныйПоискПоЭлементамФормы_НайтиПодходящиеЭлементы(ОбщиеПараметры)
	
	ПараметрыВыполнения = ОбщиеПараметры.ПараметрыВыполнения;
	ПриоритетыЭлементов = ОбщиеПараметры.ПриоритетыЭлементов;
	СтрокаПоиска = ПараметрыВыполнения.СтрокаПоискаВрег;
	СловаПоиска  = ПараметрыВыполнения.СловаПоиска;
	
	Для Каждого ЭлементФормы Из ОбщиеПараметры.Форма.Элементы Цикл
		
		ПолучаемыеСвойства = Новый Структура("Видимость, Имя, Заголовок", Ложь, "", "");
		
		Попытка
			ЗаполнитьЗначенияСвойств(ПолучаемыеСвойства, ЭлементФормы);
		Исключение
			Продолжить;
		КонецПопытки;
		
		Если НЕ ПолучаемыеСвойства.Видимость Тогда
			Продолжить;
		КонецЕсли;
		
		ГлобальныйПоискПоЭлементамФормы_ДобавитьПриоритетЭлемента(
			ПараметрыВыполнения, ЭлементФормы, ПолучаемыеСвойства, 
			СтрокаПоиска, СловаПоиска, ПриоритетыЭлементов);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ГлобальныйПоискПоЭлементамФормы_ДобавитьПриоритетЭлемента(
	ПараметрыВыполнения, ЭлементФормы, ПолучаемыеСвойства, СтрокаПоиска, СловаПоиска, ПриоритетыЭлементов)
	
	ПриоритетЭлемента = 0;
	ИмяЭлементаВрег   = ВРег(ПолучаемыеСвойства.Имя);
	ЗаголовокВрег     = ВРег(ПолучаемыеСвойства.Заголовок);

	Если ИмяЭлементаВрег = СтрокаПоиска Или ЗаголовокВрег = СтрокаПоиска Тогда
		ПриоритетЭлемента = ПараметрыВыполнения.МаксимальныйПриоритет;
	ИначеЕсли СтрНачинаетсяС(ИмяЭлементаВрег, СтрокаПоиска) Или СтрНачинаетсяС(ЗаголовокВрег, СтрокаПоиска) Тогда
		ПриоритетЭлемента = ПараметрыВыполнения.МаксимальныйПриоритет - 1;
	Иначе
		Для Каждого СловоПоиска Из СловаПоиска Цикл
			ПриоритетЭлемента = ПриоритетЭлемента + СтрЧислоВхождений(ИмяЭлементаВрег, СловоПоиска);
			ПриоритетЭлемента = ПриоритетЭлемента + СтрЧислоВхождений(ЗаголовокВрег, СловоПоиска);
		КонецЦикла;
	КонецЕсли;

	Если ПриоритетЭлемента > 0 Тогда
		ПриоритетыЭлементов.Добавить(ПриоритетЭлемента, ЭлементФормы.Имя);
	КонецЕсли;
	
КонецПроцедуры

// Глобальный поиск по открытым окнам добавить результат.
// 
// Параметры:
//  ОбщиеПараметры - см. ОбщиеПараметрыВыполненияПоискаПоЭлементамФормы
//  РезультатыПоиска - РезультатГлобальногоПоиска
Процедура ГлобальныйПоискПоЭлементамФормы_ДобавитьРезультаты(ОбщиеПараметры, РезультатыПоиска)
	
	Форма = ОбщиеПараметры.Форма;
	
	ПараметрыВыполнения = ОбщиеПараметры.ПараметрыВыполнения;
	
	КоллекцияЭлементов  = Неопределено; // ВсеЭлементыФормы, СписокЗначений
	Если ОбщиеПараметры.ВыводВсехЭлементов Тогда
		КоллекцияЭлементов = Форма.Элементы;
	Иначе
		КоллекцияЭлементов = ОбщиеПараметры.ПриоритетыЭлементов; 
		КоллекцияЭлементов.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
	КонецЕсли;
	
	ПараметрыВывода = РГП_ГлобальныйПоискКлиентСервер.ПараметрыОбработкиСтраницРезультатаКоманды(
		ПараметрыВыполнения, КоллекцияЭлементов, РезультатыПоиска);
	
	Для Каждого ЭлементКоллекции Из ПараметрыВывода.ВыводимыеСтроки Цикл // ЭлементСпискаЗначений
		
		Если ТипЗнч(ЭлементКоллекции) = Тип("ЭлементСпискаЗначений") Тогда
			ЭлементФормы = Форма.Элементы.Найти(ЭлементКоллекции.Представление);
		Иначе
			ЭлементФормы = ЭлементКоллекции; // ПолеФормы
		КонецЕсли;
		
		ГлобальныйПоискПоЭлементамФормы_ДобавитьРезультат(ОбщиеПараметры, РезультатыПоиска, ЭлементФормы);

	КонецЦикла;
	
КонецПроцедуры

// Глобальный поиск по элементам формы добавить результат.
// 
// Параметры:
//  ОбщиеПараметры - см. ОбщиеПараметрыВыполненияПоискаПоЭлементамФормы
//  РезультатыПоиска - РезультатГлобальногоПоиска - Результаты поиска
//  ЭлементФормы - ЭлементСпискаЗначений, ТаблицаФормы, ДекорацияФормы, КнопкаФормы, ГруппаФормы, ПолеФормы - Элемент формы
Процедура ГлобальныйПоискПоЭлементамФормы_ДобавитьРезультат(ОбщиеПараметры, РезультатыПоиска, ЭлементФормы)
	
	Представление = ?(ПустаяСтрока(ЭлементФормы.Заголовок), ЭлементФормы.Имя, ЭлементФормы.Заголовок);
	Представление = СтрШаблон("%1: %2", ТипЗнч(ЭлементФормы), Представление);

	ОписаниеАктивация = ОбщиеПараметры.ОписаниеАктивация;
	ДействиеАктивация = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОписанияОповещения(ОписаниеАктивация);
	ДействиеАктивация.ДополнительныеПараметры.Вставить("Форма", ОбщиеПараметры.Форма);
	ДействиеАктивация.ДополнительныеПараметры.Вставить("Элемент", ЭлементФормы);

	ОписаниеВыделения = ОбщиеПараметры.ОписаниеВыделения;
	ДействиеВыделение = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОписанияОповещения(ОписаниеВыделения);
	ДействиеВыделение.ДополнительныеПараметры.Вставить("Форма", ОбщиеПараметры.Форма);
	ДействиеВыделение.ДополнительныеПараметры.Вставить("Элемент", ЭлементФормы);

	ЭлементРезультата = РГП_ГлобальныйПоискКлиентСервер.ЭлементРезультатаГлобальногоПоиска(
			ДействиеАктивация, Представление, ОбщиеПараметры.Картинка);

	ЭлементРезультата.Действия.Добавить(ДействиеАктивация, ФразаИнтерфейса("Активировать"), ОбщиеПараметры.Картинка);
	ЭлементРезультата.Действия.Добавить(ДействиеВыделение, ФразаИнтерфейса("Выделить"), ОбщиеПараметры.Картинка);

	РезультатыПоиска.Добавить(ЭлементРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Оформление

// см. РГП_ГлобальныйПоискВызовСервера.ШрифтСтиля
Функция ШрифтСтиля(ИмяШрифта) Экспорт
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	КоллекцияКэша = ПараметрыПоиска.КэшированныеДанные.ШрифтыСтиля;
	Шрифт = КоллекцияКэша.Получить(ИмяШрифта);
	Если Шрифт = Неопределено Тогда
		//@skip-check transfer-object-between-client-server - баг ЕДТ
		//@skip-check bsl-legacy-check-expression-type - баг ЕДТ
		Шрифт = РГП_ГлобальныйПоискВызовСервера.ШрифтСтиля(ИмяШрифта);
		КоллекцияКэша.Вставить(ИмяШрифта, Шрифт);
	КонецЕсли;	
	
	Возврат Шрифт;
	
КонецФункции

// см. РГП_ГлобальныйПоискВызовСервера.ЦветСтиля
Функция ЦветСтиля(ИмяЦвета) Экспорт
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	КоллекцияКэша = ПараметрыПоиска.КэшированныеДанные.ЦветаСтиля;
	Цвет = КоллекцияКэша.Получить(ИмяЦвета);
	Если Цвет = Неопределено Тогда
		//@skip-check transfer-object-between-client-server - Баг ЕДТ
		//@skip-check bsl-legacy-check-expression-type - Баг ЕДТ
		Цвет = РГП_ГлобальныйПоискВызовСервера.ЦветСтиля(ИмяЦвета);
		КоллекцияКэша.Вставить(ИмяЦвета, Цвет);
	КонецЕсли;	
	
	Возврат Цвет;
	
КонецФункции

// см. РГП_ГлобальныйПоискКлиентСервер.ФразаИнтерфейса
Функция ФразаИнтерфейса(Фраза)
	
	Возврат РГП_ГлобальныйПоискКлиентСервер.ФразаИнтерфейса(Фраза);
	
КонецФункции

#КонецОбласти

#Область Избранное

// Параметры:
//  УдаляемыйЭлемент - см. РГП_ГлобальныйПоискКлиентСервер.ЭлементИзбранного
// 
// Возвращаемое значение:
//  Неопределено, Число - Индекс, если найден
Функция УдалитьЭлементИзбранногоИзПараметровПоискаИВернутьИндекс(УдаляемыйЭлемент)
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	ПараметрыПоиска.ИзбранноеПоиск.Удалить(УдаляемыйЭлемент.КлючПоиска);
	
	УдаляемыеЭлементы = Новый Массив; // Массив из см. РГП_ГлобальныйПоискКлиентСервер.ЭлементИзбранного
	Для Каждого ПроверяемыйЭлемент Из ПараметрыПоиска.ИзбранноеПорядок Цикл
		Если ПроверяемыйЭлемент.КлючПоиска = УдаляемыйЭлемент.КлючПоиска Тогда
			УдаляемыеЭлементы.Добавить(ПроверяемыйЭлемент);
		КонецЕсли;
	КонецЦикла;
	
	ИндексЭлемента = Неопределено; // Число
	
	Для Каждого УдаляемыйЭлемент Из УдаляемыеЭлементы Цикл
		ИндексЭлемента = УдаляемыеЭлементы.Найти(УдаляемыйЭлемент);
		ПараметрыПоиска.ИзбранноеПорядок.Удалить(ИндексЭлемента);
	КонецЦикла;
	
	Возврат ИндексЭлемента;
	
КонецФункции

// Выполняемое действие открытия формы элемента избранного.
// 
// Параметры:
//  ЭлементИзбранного - см. РГП_ГлобальныйПоискКлиентСервер.ЭлементИзбранного
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ШаблонПараметровВыполненияКомандыПоиска
// 
// Возвращаемое значение:
//  см. РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОткрытияФормы
Функция ВыполняемоеДействиеОткрытияФормыЭлементаИзбранного(ЭлементИзбранного, ПараметрыВыполнения = Неопределено)
	
	ПараметрыФормы = РГП_ГлобальныйПоискКлиентСервер.ПараметрыОткрытияФормы_ЭлементИзбранного(ЭлементИзбранного);
	
	ВыполняемоеДействие = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОткрытияФормы(
		"ОбщаяФорма.РГП_ЭлементИзбранного", ПараметрыФормы);
	Если ПараметрыВыполнения <> Неопределено Тогда
		ДействиеОбновления = РГП_ГлобальныйПоискКлиентСервер.ВыполняемоеДействиеОбновитьРезультаты(ПараметрыВыполнения);
		ОписаниеОповещенияОЗакрытии = ОписаниеОповещенияВыполняемогоДействия(ДействиеОбновления);
		ВыполняемоеДействие.ОткрываемаяФорма.ОписаниеОповещенияОЗакрытии = ОписаниеОповещенияОЗакрытии;
	КонецЕсли;
	
	Возврат ВыполняемоеДействие;
	
КонецФункции

#КонецОбласти

#Область Вспомогательные

Функция ИмяТекущегоМодуля()
	
	Возврат "РГП_ГлобальныйПоискКлиент";
	
КонецФункции

// Форма по уникальному идентификатору.
// 
// Параметры:
//  ИдентификаторФормы - Строка, УникальныйИдентификатор - Идентификатор искомой формы
// 
// Возвращаемое значение:
//  Неопределено, ФормаКлиентскогоПриложения -
Функция ФормаПоУникальномуИдентификатору(ИдентификаторФормы)
	
	Попытка
		ИдентификаторФормы = Новый УникальныйИдентификатор(ИдентификаторФормы);
	Исключение
		Возврат Неопределено; // Это не УИД;
	КонецПопытки;
	
	Для Каждого Окно Из ПолучитьОкна() Цикл

		Для Каждого Форма Из Окно.Содержимое Цикл // ФормаКлиентскогоПриложения

			Если ТипЗнч(Форма) = Тип("ФормаКлиентскогоПриложения") 
				И Форма.УникальныйИдентификатор = ИдентификаторФормы Тогда
				Возврат Форма;
			КонецЕсли;

		КонецЦикла;

	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// Общий модуль.
// 
// Параметры:
//  ИмяИлиМодуль - ОбщийМодуль, Строка - Имя или модуль
// 
// Возвращаемое значение:
//  ОбщийМодуль
Функция ОбщийМодуль(ИмяИлиМодуль)

	Если ТипЗнч(ИмяИлиМодуль) = Тип("Строка") Тогда
		
		Попытка
			ВременнаяСтруктура = Новый Структура;
			ВременнаяСтруктура.Вставить(ИмяИлиМодуль); // Проверка на корректную строку
		Исключение
			ТекстИсключения = "Передано некорректное имя общего модуля: ";
			ТекстИсключения = СтрШаблон("%1: %2", ТекстИсключения, ИмяИлиМодуль);
			ВызватьИсключение ТекстИсключения;
		КонецПопытки;
		
		Возврат Вычислить(ИмяИлиМодуль); // ОбщийМодуль // BSLLS:ExecuteExternalCodeInCommonModule-off
		
	Иначе

		Возврат ИмяИлиМодуль;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти
