// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Событие модуля приложения "ПриНачалеРаботыСистемы"
// Производим инициализацию параметров поиска
Процедура ПриНачалеРаботыСистемы() Экспорт
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	
	Если ЗначениеЗаполнено(ПараметрыПоиска.Описание) Тогда
		ГлобальныйПоиск.УстановитьОписание(ПараметрыПоиска.Описание);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыПоиска.ПодсказкаВвода) Тогда
		ГлобальныйПоиск.УстановитьПодсказкуВвода(ПараметрыПоиска.ПодсказкаВвода);
	КонецЕсли;
	
	РГП_ГлобальныйПоискКлиентПереопределяемый.Модуль().ПослеСобытияПриНачалеРаботыСистемы();
	
КонецПроцедуры

// Событие модуля приложения "ПриГлобальномПоиске"
// Анализируем введенную строку на наличие команд расширенного поиска
// 
// Параметры:
//  ИзначальнаяСтрокаПоиска - Строка - Строка, введенная пользователем или скриптом в поле глобального поиска
//  ПланПоиска - ПланГлобальногоПоиска - Текущий план выполнения глобального поиска.
Процедура ПриГлобальномПоиске(ИзначальнаяСтрокаПоиска, ПланПоиска) Экспорт
	
	СтрокаПоиска = ВРег(СокрЛП(ИзначальнаяСтрокаПоиска));
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	Для Каждого КлючИЗначение Из ПараметрыПоиска.Команды Цикл
		
		Если НЕ СтрНачинаетсяС(СтрокаПоиска, КлючИЗначение.Ключ) 
			ИЛИ НЕ КлючИЗначение.Значение.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		ПланПоиска.Очистить();
		
		СтрокаПоиска = Сред(СтрокаПоиска, СтрДлина(КлючИЗначение.Ключ) + 1);
		
		ТекущаяКоманда = КлючИЗначение.Значение; //см. НоваяКомандаРасширенногоПоиска
		ЧастиСтрокиПоиска = СтрРазделить(СтрокаПоиска, ТекущаяКоманда.Разделитель, Истина);
		Для Каждого ЧастьСтроки Из ЧастиСтрокиПоиска Цикл
			
			ПодчиненнаяКоманда = ТекущаяКоманда.Команды.Получить(ЧастьСтроки); //см. НоваяКомандаРасширенногоПоиска
			
			Если ПодчиненнаяКоманда = Неопределено 
				ИЛИ НЕ ПодчиненнаяКоманда.Использование Тогда
				Прервать;
			Иначе
				ТекущаяКоманда = ПодчиненнаяКоманда;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого ЭлементПлана Из ТекущаяКоманда.ПланПоиска Цикл
			
			ПланПоиска.Добавить(ЭлементПлана.ИмяПроцедуры, ЭлементПлана.Модуль, ЭлементПлана.НаСервере, 
				ЭлементПлана.Фоновый, ЭлементПлана.Порядок, ЭлементПлана.ДополнительныеПараметры);
			
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ТекущаяКоманда.Команды) Тогда
			ПланПоиска.Добавить("ГлобальныйПоискВывестиПодчиненныеКоманды", 
				"РГП_ГлобальныйПоискКлиент", Ложь, Ложь, ПланПоиска.Количество() + 1, ТекущаяКоманда);
		КонецЕсли;		
		
	КонецЦикла;
	
	РГП_ГлобальныйПоискКлиентПереопределяемый.Модуль().ПослеСобытияПриГлобальномПоиске(ИзначальнаяСтрокаПоиска, ПланПоиска);
	
КонецПроцедуры

// Событие модуля приложения "ПриВыбореРезультатаГлобальногоПоиска"
// Когда пользователь выбрал одну из команд расширенного глобального поиска, мы программно вводим её полный ключ в поле поиска
// 
// Параметры:
//  ЭлементРезультата - ЭлементРезультатаГлобальногоПоиска:
//  * Значение - см. НоваяКомандаРасширенногоПоиска
//  СтандартнаяОбработка - Булево
Процедура ПриВыбореРезультатаГлобальногоПоиска(ЭлементРезультата, СтандартнаяОбработка) Экспорт
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	Если ЭлементРезультата.ВидПоиска <> ПараметрыПоиска.КлючВидаПоискаВыбораКоманды Тогда
		Возврат;
	КонецЕсли;
	
	Команда = ЭлементРезультата.Значение;
	Если Команда.Использование Тогда
		СтандартнаяОбработка = Ложь;
		ГлобальныйПоиск.НачатьПоиск(ЭлементРезультата.Значение.ПолныйКлюч);
	КонецЕсли;
	
КонецПроцедуры

// Параметры расширенного глобального поиска
// Именять содержимое можно только в переропределяемом событии "ПослеЗаполненияПараметровРасширенногоГлобальногоПоиска"
// 
// Параметры:
//  ИзКэша - Булево - Выбирать ли закэшированную структуру
//  	Не рекомендуется Передавать значение Ложь, так как все внутренние механизмы используют закэшированное значение
// 
// Возвращаемое значение:
//  Структура - Параметры расширенного глобального поиска:
// * КлючВидаПоискаВыбораКоманды - Строка - Ключевая строка, передается в вид поиска результата при выборе пользователем команды
// * Команды - см. КоллекцияКомандПараметровРасширенногоГлобальногоПоиска
// * ШаблонКоманды - см. НоваяКомандаРасширенногоПоиска
// * Описание - Строка - Описание глобального поиска. Если заполнено, устанавливается при начале работы системы
// * ПодсказкаВвода - Строка - Подсказка ввода глобального поиска. Если заполнено, устанавливается при начале работы системы
Функция ПараметрыРасширенногоГлобальногоПоиска(ИзКэша = Истина) Экспорт
	
	Если ИзКэша Тогда
		Возврат РГП_ГлобальныйПоискКлиентПовтИсп.ПараметрыРасширенногоГлобальногоПоиска();
	КонецЕсли;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("КлючВидаПоискаВыбораКоманды", "Команда расширенного глобального поиска");
	ПараметрыПоиска.Вставить("ШаблонКоманды", НоваяКомандаРасширенногоПоиска(""));
	ПараметрыПоиска.Вставить("Команды", КоллекцияКомандПараметровРасширенногоГлобальногоПоиска());
	ПараметрыПоиска.Вставить("Описание", "");
	ПараметрыПоиска.Вставить("ПодсказкаВвода", "");
	
	ЗаполнитьСтандартныеКомандыРасширенногоГлобальногоПоиска(ПараметрыПоиска);
	
	РГП_ГлобальныйПоискКлиентПереопределяемый.Модуль().ПослеЗаполненияПараметровРасширенногоГлобальногоПоиска(ПараметрыПоиска);
	
	Возврат ПараметрыПоиска;
	
КонецФункции

// Новая команда расширенного поиска.
// Данным методом можно создать свою команду расширенного поиска
// 
// Параметры:
//  Ключ - Строка - Короткий ключ команды. Нужен для идентификации команды в контексте родителя
//  Родитель - Неопределено
//  		 - см. НоваяКомандаРасширенногоПоиска
// 
// Возвращаемое значение:
//  Структура - Новая команда расширенного поиска:
// * Ключ - Строка - Короткий ключ команды
// * Команды - см. КоллекцияКомандПараметровРасширенногоГлобальногоПоиска
// * ПорядокКоманд - см. УпорядоченнаяКоллекцияКомандРасширенногоГлобальногоПоиска
// * ПланПоиска - ПланГлобальногоПоиска - План поиска, который необходимо применить при выборе команды. 
// 									Игнорируется, если есть подчиненные команды
// * ОткрываемоеЗначение - Произвольный - Если нет подчиненных команд и плана поиска, тогда открывается указанное значение
// * Родитель - Неопределено - Команда верхнего уровня. В таком случае Ключ команды = Разделитель
// 			  - см. НоваяКомандаРасширенногоПоиска
// * Разделитель - Строка - Разделитель команды. Используется ключ команды верхнего уровня.
// * ПолныйКлюч - Строка - Полный ключ команды по формату <ПолныйКлючРодителя> + <Ключ> + <Разделитель>
// * Представление - Строка - Строка, выводимая пользователю
// * Описание - Строка - Строка, выводимая пользователю в качестве описания
// * Использование - Булево - Если установить Ложь, то команда будет игнорироваться
// * ОтображатьВМеню - Булево - Если установить Ложь, то команда не будет видна в меню, но будет выполняться при ручном вводе
// * Картинка - Картинка - Картинка, выводимая пользователю
//            - Неопределено
// * ДополнительныеПараметры - Структура из КлючИЗначение - Параметры, копируемые в ДополнительныеПараметры выполняемого метода команды:
// ** Ключ - Строка
// ** Значение - Произвольный
Функция НоваяКомандаРасширенногоПоиска(Ключ, Родитель = Неопределено) Экспорт
	
	Команда = Новый Структура;
	Команда.Вставить("Ключ", Ключ);
	Команда.Вставить("Представление", "");
	Команда.Вставить("Описание", "");
	
	Команда.Вставить("Использование"  , Истина);
	Команда.Вставить("ОтображатьВМеню", Истина);
	
	Команда.Вставить("Команды", КоллекцияКомандПараметровРасширенногоГлобальногоПоиска());
	Команда.Вставить("ПорядокКоманд", УпорядоченнаяКоллекцияКомандРасширенногоГлобальногоПоиска());
	Команда.Вставить("ПланПоиска", Новый ПланГлобальногоПоиска);
	Команда.Вставить("ОткрываемоеЗначение", Неопределено);
	
	Команда.Вставить("Родитель", Родитель);
	Команда.Вставить("Разделитель", "");
	Команда.Вставить("ПолныйКлюч", "");
	Команда.Вставить("Картинка", Неопределено);
	Команда.Вставить("ДополнительныеПараметры", Новый Структура);
	
	Если Родитель = Неопределено Тогда
		Команда.Разделитель = Ключ;
		Команда.ПолныйКлюч  = Ключ;
	Иначе
		Команда.Разделитель = Родитель.Разделитель;
		Команда.ПолныйКлюч  = СтрШаблон("%1%2%3", Родитель.ПолныйКлюч, Ключ, Команда.Разделитель);
		Родитель.ПорядокКоманд.Добавить(Команда);
		Родитель.Команды.Вставить(ВРег(Ключ), Команда);
	КонецЕсли;
	
	Возврат Команда; //@skip-check constructor-function-return-section - баг ЕДТ
	
КонецФункции

// Метод добавляет в описание команды новый элемент плана поиска, созданный на основе переданного эталона
// При этом в элемент плана поиска в Дополнительные параметры записывается структура из ПараметрыВыполненияКомандыРасширенногоГлобальногоПоиска()
// + в которой помимо свойств содержатся дополнительные параметры эталонного элемента и самой команды
// 
// Параметры:
//  Команда - см. НоваяКомандаРасширенногоПоиска
//  ЭталонныйЭлемент - ЭлементПланаГлобальногоПоиска:
//  * ДополнительныеПараметры - Структура из КлючИЗначение:
//  ** Ключ - Строка
//  ** Значение - Произвольный
Процедура ДобавитьВКомандуЭлементПланаПоиска(Команда, ЭталонныйЭлемент) Экспорт
	
	ПараметрыВыполнения = РГП_ГлобальныйПоискКлиентСервер.ПараметрыВыполненияКомандыРасширенногоГлобальногоПоиска();
	ЗаполнитьЗначенияСвойств(ПараметрыВыполнения, Команда);
	
	ЭталонныеДопПараметры = ЭталонныйЭлемент.ДополнительныеПараметры;
	Если ТипЗнч(ЭталонныеДопПараметры) = Тип("Структура") Тогда
		Для Каждого КлючИЗначение Из ЭталонныеДопПараметры Цикл
			ПараметрыВыполнения.ДополнительныеПараметры.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	НовыйЭлемент = Новый ЭлементПланаГлобальногоПоиска(ЭталонныйЭлемент.ИмяПроцедуры, ЭталонныйЭлемент.Модуль, 
		ЭталонныйЭлемент.НаСервере, ЭталонныйЭлемент.Фоновый, ЭталонныйЭлемент.Порядок, ПараметрыВыполнения);
		
	Команда.ПланПоиска.Добавить(НовыйЭлемент);
	
КонецПроцедуры

// Метод плана глобального поиска для вывода подчиненных команд пользователю
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка, по которой выполняется поиск.
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ОписаниеКоманды - см. РГП_ГлобальныйПоискКлиент.НоваяКомандаРасширенногоПоиска
Процедура ГлобальныйПоискВывестиПодчиненныеКоманды(СтрокаПоиска, РезультатыПоиска, ОписаниеКоманды) Экспорт
	
	ПараметрыПоиска = ПараметрыРасширенногоГлобальногоПоиска();
	
	Для Каждого ПодчиненнаяКоманда Из ОписаниеКоманды.ПорядокКоманд Цикл //см. НоваяКомандаРасширенногоПоиска
	
		Если НЕ ПодчиненнаяКоманда.Использование ИЛИ НЕ ПодчиненнаяКоманда.ОтображатьВМеню Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодчиненнаяКоманда.ОткрываемоеЗначение) Тогда
			Значение  = ПодчиненнаяКоманда.ОткрываемоеЗначение;
			ВидПоиска = СтандартныйВидГлобальногоПоиска.НавигационнаяСсылка; //СтандартныйВидГлобальногоПоиска, Строка
		Иначе
			Значение  = ПодчиненнаяКоманда;
			ВидПоиска = ПараметрыПоиска.КлючВидаПоискаВыбораКоманды;
		КонецЕсли;
		
		РезультатыПоиска.Добавить(Значение, ПодчиненнаяКоманда.Представление, 
			ПодчиненнаяКоманда.Картинка, ВидПоиска, ПодчиненнаяКоманда.Описание);
		
	КонецЦикла;
	
	РГП_ГлобальныйПоискКлиентПереопределяемый.Модуль().ПослеВыводаПодчиненныхКомандГлобальногоПоиска(
		СтрокаПоиска, РезультатыПоиска, ОписаниеКоманды);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Упорядоченная коллекция команд расширенного глобального поиска.
// Нужна для правильного порядка вывода команд пользователю
// 
// Возвращаемое значение:
//  Массив из см. НоваяКомандаРасширенногоПоиска
Функция УпорядоченнаяКоллекцияКомандРасширенногоГлобальногоПоиска()
	
	Возврат Новый Массив;
	
КонецФункции

// Иерархическая коллекция команд параметров расширенного глобального поиска.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение:
// * Ключ - Строка
// * Значение - см. НоваяКомандаРасширенногоПоиска
Функция КоллекцияКомандПараметровРасширенногоГлобальногоПоиска()
	
	Возврат Новый Соответствие;
		
КонецФункции

// Заполняет стандартные команды расширенного глобального поиска
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
Процедура ЗаполнитьСтандартныеКомандыРасширенногоГлобальногоПоиска(ПараметрыПоиска)
	
	ОбщаяКоманда = НоваяКомандаРасширенногоПоиска("\");
	
	ЗаполнитьКомандыПоискаМетаданныхРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда);
	
	ЗаполнитьИнформационныеКомандыРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда);
	
	ПараметрыПоиска.Команды.Вставить(ОбщаяКоманда.Разделитель, ОбщаяКоманда);
	
КонецПроцедуры

// Заполняет команды поиска метаданных расширенного глобального поиска
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  ОбщаяКоманда - см. НоваяКомандаРасширенногоПоиска
Процедура ЗаполнитьКомандыПоискаМетаданныхРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда)
	
	ЭлементПланаПоиска = Новый ЭлементПланаГлобальногоПоиска(
		"ГлобальныйПоискМетаданные", "РГП_ГлобальныйПоискСервер", Истина, Ложь);
	
	КомандаПоискаМетаданных = НоваяКомандаРасширенногоПоиска("М", ОбщаяКоманда);
	КомандаПоискаМетаданных.Представление = "Поиск по метаданным";
	КомандаПоискаМетаданных.Описание = "Поиск по именам, синонимам, представлениям и подсказкам";
	КомандаПоискаМетаданных.Картинка = БиблиотекаКартинок.ПоискДанных;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоискаМетаданных, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("Все", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Все";
	КомандаПоиска.Описание = "Поиск по всем объектам метаданных";
	КомандаПоиска.Картинка = БиблиотекаКартинок.ПоискДанных;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("Спр", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Справочники";
	КомандаПоиска.Картинка = БиблиотекаКартинок.Справочник;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("Док", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Документы";
	КомандаПоиска.Картинка = БиблиотекаКартинок.Документ;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("ЖД", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Журналы документов";
	КомандаПоиска.Картинка = БиблиотекаКартинок.ЖурналДокументов;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("Отч", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Отчеты";
	КомандаПоиска.Картинка = БиблиотекаКартинок.Отчет;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("Обр", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Обработки";
	КомандаПоиска.Картинка = БиблиотекаКартинок.Обработка;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("РС", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Регистры сведений";
	КомандаПоиска.Картинка = БиблиотекаКартинок.РегистрСведений;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("РН", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Регистры накопления";
	КомандаПоиска.Картинка = БиблиотекаКартинок.РегистрНакопления;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("РБ", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Регистры бухгалтерии";
	КомандаПоиска.Картинка = БиблиотекаКартинок.РегистрБухгалтерии;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("БП", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Бизнес процессы";
	КомандаПоиска.Картинка = БиблиотекаКартинок.БизнесПроцесс;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("Здч", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Задачи";
	КомандаПоиска.Картинка = БиблиотекаКартинок.Задача;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("ПВР", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Планы видов расчета";
	КомандаПоиска.Картинка = БиблиотекаКартинок.ПланВидовРасчета;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("ПВХ", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Планы видов характеристик";
	КомандаПоиска.Картинка = БиблиотекаКартинок.ПланВидовХарактеристик;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("ПО", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Планы обмена";
	КомандаПоиска.Картинка = БиблиотекаКартинок.ПланОбмена;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("ПС", КомандаПоискаМетаданных);
	КомандаПоиска.Представление = "Планы счетов";
	КомандаПоиска.Картинка = БиблиотекаКартинок.ПланСчетов;
	ДобавитьВКомандуЭлементПланаПоиска(КомандаПоиска, ЭлементПланаПоиска);
	
КонецПроцедуры

// Заполняет информационные команды расширенного глобального поиска
// 
// Параметры:
//  ПараметрыПоиска - см. ПараметрыРасширенногоГлобальногоПоиска
//  ОбщаяКоманда - см. НоваяКомандаРасширенногоПоиска
Процедура ЗаполнитьИнформационныеКомандыРасширенногоГлобальногоПоиска(ПараметрыПоиска, ОбщаяКоманда)
	
	ИнформационнаяКоманда = НоваяКомандаРасширенногоПоиска("Инфо", ОбщаяКоманда);
	ИнформационнаяКоманда.Представление = "О расширении глобального поиска";
	ИнформационнаяКоманда.Картинка = БиблиотекаКартинок.Информация;
	
	КомандаПоиска = НоваяКомандаРасширенногоПоиска("github", ИнформационнаяКоманда);
	КомандаПоиска.Представление = "Открыть репозиторий";
	КомандаПоиска.Картинка = БиблиотекаКартинок.РГП_GitHub;
	КомандаПоиска.ОткрываемоеЗначение = "https://github.com/SeiOkami/AdvancedGlobalSearchOneS";
	
КонецПроцедуры

#КонецОбласти
