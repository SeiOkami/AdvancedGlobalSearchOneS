// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Значение соответствует шаблону.
// 
// Параметры:
//  Значение - Произвольный
//           - Структура из КлючИЗначение:
//           * Ключ - Строка
//  Шаблон - Произвольный
//           - Структура из КлючИЗначение:
//           * Ключ - Строка
// 
// Возвращаемое значение:
//  Булево
Функция ЗначениеСоответствуетШаблону(Значение, Шаблон) Экспорт
	
	Соответствует = Истина;
	
	ТипЗначения = ТипЗнч(Значение);
	Если ТипЗначения <> ТипЗнч(Шаблон) Тогда
		
		Соответствует = Ложь;
		
	ИначеЕсли ТипЗначения = Тип("Структура") Тогда
		
		Если Шаблон.Количество() <> Значение.Количество() Тогда
			Соответствует = Ложь;
		Иначе
			Для Каждого КлючИЗначение Из Шаблон Цикл
				Если НЕ Значение.Свойство(КлючИЗначение.Ключ) Тогда
					Соответствует = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Соответствует;
	
КонецФункции

// Параметры выполнения команды расширенного глобального поиска.
// Значения наследуются из РГП_ГлобальныйПоискКлиент.НоваяКомандаРасширенногоПоиска
// 
// Возвращаемое значение:
//  Структура - Параметры выполнения команды расширенного глобального поиска:
// * Ключ - Строка
// * Разделитель - Строка
// * ВозможныПараметры - Булево
// * ПолныйКлюч - Строка
// * ДополнительныеПараметры - Структура из КлючИЗначение:
// ** Ключ - Строка
// ** Значение - Произвольный
Функция ПараметрыВыполненияКомандыРасширенногоГлобальногоПоиска() Экспорт
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("Ключ", "");
	ПараметрыВыполнения.Вставить("Разделитель", "");
	ПараметрыВыполнения.Вставить("ВозможныПараметры", Ложь);
	ПараметрыВыполнения.Вставить("ПолныйКлюч", "");
	ПараметрыВыполнения.Вставить("ДополнительныеПараметры", Новый Структура);
	
	Возврат ПараметрыВыполнения;
	
КонецФункции

// Описание оповещения.
// 
// Параметры:
//  ИмяПроцедуры - Строка, Неопределено - Имя экспортируемой процедуры модуля, которая будет вызвана.
//  Модуль - ОбщийМодуль, Строка - Программный модуль, процедура которого будет вызвана
//  ДополнительныеПараметры - Неопределено, Произвольный - Значение любого типа, которое при вызове будет передано в указанную процедуру последним параметром.
//  ИмяПроцедурыОбработкиОшибки - Строка - Имя экспортируемой процедуры модуля, которая будет вызвана в случае возникновения ошибки.
//  МодульОбработкиОшибки - ОбщийМодуль, Строка, Неопределено - Программный модуль, процедура которого будет вызвана в случае возникновения ошибки. При использовании типа ФормаКлиентскогоПриложения будет вызван метод модуля указанной формы клиентского приложения. При использовании типа КомандаКомандногоИнтерфейса будет вызван метод модуля команды командного интерфейса. При использовании типа ОбщийМодуль будет вызван метод общего неглобального модуля.
// 
// Возвращаемое значение:
//  Структура - Описание оповещения:
// * ИмяПроцедуры - см. ОписаниеОповещения.ИмяПроцедуры
// * Модуль - см. ОписаниеОповещения.Модуль
// * ДополнительныеПараметры - см. ОписаниеОповещения.ДополнительныеПараметры
// * ИмяПроцедурыОбработкиОшибки - см. ОписаниеОповещения.ИмяПроцедурыОбработкиОшибки
// * МодульОбработкиОшибки - см. ОписаниеОповещения.МодульОбработкиОшибки
Функция ОписаниеОповещения(ИмяПроцедуры = "", Модуль = "", ДополнительныеПараметры = Неопределено, 
	ИмяПроцедурыОбработкиОшибки = "", МодульОбработкиОшибки = "") Экспорт //@skip-check method-too-many-params
	
	ОписаниеОповещения = Новый Структура;
	ОписаниеОповещения.Вставить("ИмяПроцедуры", ИмяПроцедуры);
	ОписаниеОповещения.Вставить("Модуль", Модуль);
	ОписаниеОповещения.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	ОписаниеОповещения.Вставить("ИмяПроцедурыОбработкиОшибки", ИмяПроцедурыОбработкиОшибки);
	ОписаниеОповещения.Вставить("МодульОбработкиОшибки", МодульОбработкиОшибки);
	
	//@skip-check constructor-function-return-section - баг ЕДТ
	Возврат ОписаниеОповещения;
	
КонецФункции

// Данные результата глобального поиска.
// 
// Возвращаемое значение:
//  Структура:
// * Ключ - Строка - Ключ команды
// * ПолныйКлюч - Строка - Полный ключ команды
// * Разделитель - Строка - Разделитель команд
// * ОткрываемоеЗначение - Неопределено, Произвольный - Значение, которое необходимо открыть
// * ПутьПерехода - Строка - Полный путь перехода по глобальному поиску
// * ОписаниеОповещения - Неопределено
//                      - ОписаниеОповещения
//                      - см. ОписаниеОповещения
// * ДополнительныеПараметры - Структура из КлючИЗначение - :
// ** Ключ - Строка
// ** Значение - Произвольный
Функция ДанныеРезультатаГлобальногоПоиска() Экспорт

	Результат = Новый Структура;
	
	//Идентификация команды
	Результат.Вставить("Ключ", "");
	Результат.Вставить("ПолныйКлюч", "");
	Результат.Вставить("Разделитель", "");
	
	//Выполняемое действие
	Результат.Вставить("ОткрываемоеЗначение", Неопределено);	
	Результат.Вставить("ПутьПерехода", "");
	Результат.Вставить("ОписаниеОповещения", Неопределено);
	
	//Дополнительные параметры
	Результат.Вставить("ДополнительныеПараметры", Новый Структура);
	
	Возврат Результат;
	
КонецФункции

// Данные результата глобального поиска на основе описания команды.
// 
// Параметры:
//  ДанныеВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ДанныеПоискаКомандыГлобальногоПоиска
// 
// Возвращаемое значение:
//  см. РГП_ГлобальныйПоискКлиентСервер.ДанныеРезультатаГлобальногоПоиска
Функция ДанныеРезультатаНаОсновеДанныхВыполнения(ДанныеВыполнения) Экспорт
	
	Возврат ДанныеРезультатаНаОсновеПараметрыВыполнения(ДанныеВыполнения.ПараметрыВыполнения);
	
КонецФункции

// Данные результата глобального поиска на основе описания команды.
// 
// Параметры:
//  ПараметрыВыполнения - см. РГП_ГлобальныйПоискКлиентСервер.ПараметрыВыполненияКомандыРасширенногоГлобальногоПоиска
// 
// Возвращаемое значение:
//  см. РГП_ГлобальныйПоискКлиентСервер.ДанныеРезультатаГлобальногоПоиска
Функция ДанныеРезультатаНаОсновеПараметрыВыполнения(ПараметрыВыполнения) Экспорт
	
	ДанныеРезультата = ДанныеРезультатаГлобальногоПоиска();
	ЗаполнитьЗначенияСвойств(ДанныеРезультата, ПараметрыВыполнения, "Ключ,ПолныйКлюч,Разделитель");
	
	Возврат ДанныеРезультата;
	
КонецФункции

// Заполнить путь перехода в данных результата.
// 
// Параметры:
//  ДанныеРезультата - см. ДанныеРезультатаГлобальногоПоиска
//  ДанныеПоиска - см. ДанныеПоискаКомандыГлобальногоПоиска
//  КлючКоманды - Строка
//  ПараметрыКоманды - Массив из Произвольный
//  				 - Произвольный
//  				 - Неопределено
// 
Процедура ЗаполнитьПутьПереходаВДанныхРезультата(ДанныеРезультата, ДанныеПоиска, КлючКоманды = "", ПараметрыКоманды = Неопределено) Экспорт
	
	ЧастиСтроки = Новый Массив; //Массив из Строка
	
	Если ЗначениеЗаполнено(КлючКоманды) Тогда
		ЧастиСтроки.Добавить(КлючКоманды);
	КонецЕсли;
	
	Для Каждого ПараметрКоманды Из ДанныеПоиска.ПараметрыКоманды Цикл
		ЧастиСтроки.Добавить(ПараметрКоманды);
	КонецЦикла;
	
	Если ТипЗнч(ПараметрыКоманды) = Тип("Массив") Тогда
		Для Каждого ПараметрКоманды Из ПараметрыКоманды Цикл
			ЧастиСтроки.Добавить(Строка(ПараметрКоманды));
		КонецЦикла;
	ИначеЕсли ПараметрыКоманды <> Неопределено Тогда
		ЧастиСтроки.Добавить(Строка(ПараметрыКоманды));
	КонецЕсли;
	
	ЧастиСтроки.Добавить(ДанныеПоиска.СтрокаПоиска);
	
	ДанныеРезультата.ПутьПерехода = ДанныеРезультата.ПолныйКлюч + СтрСоединить(ЧастиСтроки, ДанныеРезультата.Разделитель);
	
КонецПроцедуры

// Данные для выполнения команды расширенного глобального поиска.
// 
// Параметры:
//  ПараметрыВыполнения - см. ПараметрыВыполненияКомандыРасширенногоГлобальногоПоиска
//  СтрокаПоиска - Строка
// 
// Возвращаемое значение:
//  Структура - Данные для выполнения команды расширенного глобального поиска:
// * ПараметрыВыполнения - см. ПараметрыВыполненияКомандыРасширенногоГлобальногоПоиска
// * ПараметрыКоманды - Массив из Строка - Параметры, переданные после имени команды с использованием разделителя
// * ПолныйКлючСКомандами - Строка - Полный ключ команды, включая параметры
// * СтрокаПоиска - Строка - Строка поиска с вырезанным ключем команды
// * СтрокаПоискаВрег - Строка - СтрокаПоиска в верхнем регистре
// * СловаПоиска - Массив из Строка - СтрокаПоискаВрег разбитая на слова
// * МаксимальныйПриоритет - Число - Максимальный приоритет, устанавливаемый для идеального совпадения по строке поиска
// * ЛимитСтрокРезультата - Число - Максимальное число выводимых строк результата
Функция ДанныеПоискаКомандыГлобальногоПоиска(ПараметрыВыполнения, Знач СтрокаПоиска) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ПараметрыВыполнения", ПараметрыВыполнения);
	Результат.Вставить("ПараметрыКоманды", Новый Массив);
	Результат.Вставить("ПолныйКлючСКомандами", ПараметрыВыполнения.ПолныйКлюч);
	СтрокаПоиска = СокрЛП(Сред(СтрокаПоиска, СтрДлина(ПараметрыВыполнения.ПолныйКлюч) + 1));
	
	Если ПараметрыВыполнения.ВозможныПараметры Тогда
		ПараметрыКоманды  = СтрРазделить(СтрокаПоиска, ПараметрыВыполнения.Разделитель);
		ГраницаПараметров = ПараметрыКоманды.ВГраница();
		Если ГраницаПараметров > 0 Тогда
			СтрокаПоиска = ПараметрыКоманды.Получить(ГраницаПараметров);
			ПараметрыКоманды.Удалить(ГраницаПараметров);
			Результат.ПараметрыКоманды = ПараметрыКоманды;
			Результат.ПолныйКлючСКомандами = СтрШаблон("%1%2%3", Результат.ПолныйКлючСКомандами, 
				СтрСоединить(Результат.ПараметрыКоманды, ПараметрыВыполнения.Разделитель), ПараметрыВыполнения.Разделитель);
		КонецЕсли;
	КонецЕсли;
	
	Результат.Вставить("СтрокаПоиска", СтрокаПоиска);
	Результат.Вставить("СтрокаПоискаВрег", ВРег(Результат.СтрокаПоиска));
	Результат.Вставить("СловаПоиска", СтрРазделить(Результат.СтрокаПоискаВрег, " .\/", Ложь));
	Результат.Вставить("МаксимальныйПриоритет", 999);
	Результат.Вставить("ЛимитСтрокРезультата", 33);
	
	Возврат Результат;
	
КонецФункции

// Ключ вида расширенного глобального поиска. 
// По нему определяем, что при нажатии нужно выполнять свою логику
// 
// Возвращаемое значение:
//  Строка
Функция КлючВидаРасширенногоГлобальногоПоиска() Экспорт
	
	Возврат "РГП_РасширенныйГлобальныйПоиск";
	
КонецФункции

// Новый элемент результата глобального поиска.
// 
// Параметры:
//  ДанныеРезультата - см. ДанныеРезультатаГлобальногоПоиска
//  Представление - Строка - Представление
//  Картинка - Неопределено, Картинка - Картинка
//  Описание - Строка - Описание
//  ВидПоиска - Неопределено, Строка, СтандартныйВидГлобальногоПоиска - Вид поиска
// 
// Возвращаемое значение:
//  ЭлементРезультатаГлобальногоПоиска
Функция ЭлементРезультатаГлобальногоПоиска(ДанныеРезультата, Представление, 
	Картинка = Неопределено, Описание = "", Знач ВидПоиска = Неопределено) Экспорт
	
	Если ВидПоиска = Неопределено Тогда
		ВидПоиска = КлючВидаРасширенногоГлобальногоПоиска();
	КонецЕсли;
	
	Возврат Новый ЭлементРезультатаГлобальногоПоиска(ДанныеРезультата, Представление, Картинка, ВидПоиска, Описание);
	
КонецФункции

// Добавить элемент результата команда ввода строки на основе данных поиска.
// 
// Параметры:
//  РезультатыПоиска - РезультатГлобальногоПоиска - Выходной параметр. Содержит результаты поиска.
//  ДанныеПоиска - см. ДанныеПоискаКомандыГлобальногоПоиска
//  Представление - Строка - Представление в заголовке поля ввода
Процедура ДобавитьЭлементРезультатаКомандаВводаСтрокиНаОсновеДанныхПоиска(
	РезультатыПоиска, ДанныеПоиска, Представление = "Введите строку для поиска") Экспорт
	
	РезультатыПоиска.Добавить(
		ЭлементРезультатаКомандаВводаСтрокиНаОсновеДанныхПоиска(ДанныеПоиска, Представление));
	
КонецПроцедуры

// Элемент результата команда ввода строки в конце поля поиска.
// 
// Параметры:
//  ДанныеПоиска - см. ДанныеПоискаКомандыГлобальногоПоиска
//  Представление - Строка - Представление в заголовке поля ввода
// 
// Возвращаемое значение:
//  ЭлементРезультатаГлобальногоПоиска
Функция ЭлементРезультатаКомандаВводаСтрокиНаОсновеДанныхПоиска(ДанныеПоиска, Представление = "Введите строку для поиска") Экспорт
	
	Возврат ЭлементРезультатаКомандаВводаСтроки(ДанныеПоиска.ПолныйКлючСКомандами, ДанныеПоиска.СтрокаПоиска, Представление);
	
КонецФункции

// Элемент результата команда ввода строки в конце поля поиска.
// 
// Параметры:
//  СтрокаПоиска - Строка - Строка поиска, в конце которой будет подставлена введенная строка
//  НачальнаяСтрока - Строка - Начальное значение строки, которое будет использовано в качестве начального значения в окне ввода.
//  Представление - Строка - Представление в заголовке поля ввода
// 
// Возвращаемое значение:
//  ЭлементРезультатаГлобальногоПоиска
Функция ЭлементРезультатаКомандаВводаСтроки(СтрокаПоиска, НачальнаяСтрока = "", Представление = "Введите строку для поиска") Экспорт
	
	ПараметрыМетода = ПараметрыДействияВводаСтроки(СтрокаПоиска, НачальнаяСтрока, Представление);
	
	ДанныеРезультата = ДанныеРезультатаГлобальногоПоиска();
	ДанныеРезультата.ОписаниеОповещения = ОписаниеОповещения(
		"ОтобразитьВводСтроки", "РГП_ГлобальныйПоискКлиент", ПараметрыМетода);
	
	ЭлементРезультата = ЭлементРезультатаГлобальногоПоиска(ДанныеРезультата, Представление, БиблиотекаКартинок.ПоискДанных);
	
	Возврат ЭлементРезультата;
	
КонецФункции

// Параметры действия ввода строки.
// 
// Параметры:
//  СтрокаПоиска - см. ЭлементРезультатаКомандаВводаСтроки.СтрокаПоиска
//  НачальнаяСтрока - см. ЭлементРезультатаКомандаВводаСтроки.НачальнаяСтрока
//  Представление - см. ЭлементРезультатаКомандаВводаСтроки.Представление
// 
// Возвращаемое значение:
//  Структура - Параметры действия ввода строки:
//  * СтрокаПоиска - см. ЭлементРезультатаКомандаВводаСтроки.СтрокаПоиска
//  * НачальнаяСтрока - см. ЭлементРезультатаКомандаВводаСтроки.НачальнаяСтрока
//  * Представление - см. ЭлементРезультатаКомандаВводаСтроки.Представление
Функция ПараметрыДействияВводаСтроки(СтрокаПоиска, НачальнаяСтрока, Представление) Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("СтрокаПоиска", СтрокаПоиска);
	Параметры.Вставить("Представление", Представление);
	Параметры.Вставить("НачальнаяСтрока", НачальнаяСтрока);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти
